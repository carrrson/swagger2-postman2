{
  "swagger": "2.0",
  "info" : {
    "description" : "# Introduction\nRich Data Services (RDS) is a suite of REST APIs designed by Metadata Technology North America (MTNA) to meet various needs for data engineers, managers, custodians, and consumers. RDS provides a range of services including data profiling, mapping, transformation, validation, ingestion, and dissemination. For more information about each of these APIs and how you can incorporate or consume them as part of your work flow please visit the [MTNA website](https://mtna.us/).\n\n# Overview\nThe APIs documented here provide data managers a way to expose and disseminate their data in useful, robust, and flexible ways to end users. Data managers can use RDS to not only set up connections to their data, but document it in ways that enlighten users as to the original purpose of the data and its intended use, making data discovery for the end user much more convenient. \n\n## Exposing Data\nManagers begin by building their RDS catalog, a two level hierarchy of catalogs and data products. Each catalog could be a clients data, a series of data products, or even data products about similar topics. The catalogs help managers group data products in a logical fashion. After a catalog is created, data products can be added to them, which set up the specifics of the data source that is being used. Once the data product is added to the catalog, the manager can choose to be done. The basic metadata from the data source will be used to fill out information about the variables in the data product (ID, name, data type) and the data can be queried by end users immediately. If a manager does not wish to expose their catalog or data products to anyone other than administrators, these can be set to \"private\".\n\n## Enhancing Data With Metadata\nWhile data can be queried immediately after setting up a data product, managers can continue to enhance the data product through the process of documenting the data (creating metadata). This could be updating variable names to be more meaningful, adding labels, descriptions, classifications, or one of many other properties on the variables in the data product. The addition of metadata helps bring meaning and intention to the data. This is vital for robust user interfaces, processing, and even the generated data packages that RDS performs. In addition, metadata allows users to discover the data they are looking for easily.\n\n## Rich Querying\nVery rarely will users actually want to view an entire data set, most of the time it is expected for users to subset their data based on variables or topics of interest. This brings up a couple interesting issues for users trying to access the data. If users are unfamiliar with the data source or variable names, how are they supposed to select the variables they are interested in? This may not be a big deal for small data sources, but do we really expect users to search through hundreds or thousands of variables on big data sources in order to find the variable they are interested in? To solve this problem, RDS leverages the documentation that administrators have added to provide enhanced selection capability. \n\n### Query by Variable Names / Regular Expression\nThe first way RDS allows users to select variables is through the well known and traditional way of specifying variable names. If we know the variables we want to work with this is a great way to quickly subset our data. This is done through the use of the cols parameter, which takes a comma separated list of values. The names used are all treated as regular expressions, so feel free to treat them as such. \n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/select?cols=col1,col2,col3,col[0-9]+,... `\n\n### Query by Keyword\nKey words are another way to search for variables. When selecting variables by keywords it is important to have good metadata backing the variables. A variables name, label, description, and question text will be searched for the keyword and any and all matches will be returned. To search on keywords we will have to put a $ before the keyword we would like to search on in the cols parameter.\n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/select?cols=$keyword`\n\n## Interactive Dictionaries\nWhile RDS is designed to deliver both data and metadata, the metadata can be queried by itself in order to provide clients with a wealth of knowledge about what is in the data. A dynamic data dictionary could be created to provide users with an in depth look at a data product before they even begin to query the data. \n\n### Getting the Variables\nThe logical place to start when displaying a data products contents would be the products variables (columns). This will provide end users with high level information about the variables which they can then drill down into if desired. RDS provides variable summaries as a quick way to set this up. The in addition to variable information, the summary also may contain a classification URI, which could be used to direct a user to a particular classification without the need to dig any further into the variable metadata.\n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/variables`\n\n### Getting More Information About a Variable\nThe variable summaries are a good place to start when presenting the metadata to users, but to save querying time they are not used to store all of the variable information (summary statistics and frequencies for instance). If a user selects a variable, it would make sense to get a full variable with all the information available.\n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}`\n\n### Getting a Classification\nClassifications are essentially a set of codes and their values, and are often vital to understanding the data stored in any given data product. If a variable has a classification associated with it it will have the 'classification URI' property filled out. This can be used to retrieve high level information about the classification. Beware though, due to the fact that some classifications can be extremely large (100ks of codes) no codes will be returned on the classification, they need to be queried by themselves. \n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/classification/{classificationUri}`\n\n### Building a Classification\nDue to the fact that classifications can be very large, separate calls must be made to get a subset of codes in batches. These can be used to build out a classification as a user browsers / paginates through the codelist. \n\n`http://{host}/rds/api/catalog/{catalogId}/{dataProductId}/classification/{classificationUri}/codes`\n\n\n## Customized Data Packaging\nIn many instances, data available on the web is provided in an open format (CSV or tab delimited) along with documentation typically provided in text, Word, or PDF formats. This presents a huge challenge for users as these formats are not machine actionable, meaning that the user has the burden of transcribing the metadata into the format they want. \n\nRDS solves this by providing a variety of formats that include the metadata in actionable ways. In addition to the text or Excel data formats that are so common, SQL scripts can be generated to recreate the extract (and variables look up tables) in the users preferred SQL database. For users that prefer to load their data in statistical software, SAS, SPSS, and Stata syntax can be generated to accompany the data.\n\n### Discovering Packaging Formats\nCurious as to what formats RDS provides? Just make the following call to discover what is available, the formats will be organized into sections for data, documentation, metadata, and scripts.\n\n`http://{host}/rds/api/package/options`\n\nThe returned formats should have a name, ID, and description, giving a basic description of what the formats are and their intended purpose. \n\n### Configure Packaging Options\nWhen users find a package that fits their need, they can get a configuration object using the ID as follows:\n\n`http://{host}/rds/api/package/options/{formatId}`\n\nThis will return an object containing all the options available for the format. These options can filled out and added to an array of packaging options that can be used to create a data package. \n\n### Packaging Data\nOnce all the formats are picked and their options filled out, these can be posted to the following endpoints (with the appropriate queries in the query parameters as normal) to start a packaging process.\n\n`http://{host}/rds/api/package/{catalogId}/{dataProductId}/select`\n`http://{host}/rds/api/package/{catalogId}/{dataProductId}/tabulate`\n\nThese will return a process ID, which can be used to check the process status at \n\n`http://{host}/rds/api/package/processdetails/{processId}`\n\nand to download the package upon completion at\n\n`http://{host}/rds/api/package/{processId}`\n",
    "version" : "1.0.2-SNAPSHOT",
    "title" : "MTNA Rich Data Services (RDS)"
  },
  "basePath" : "/rds",
  "schemes" : [],
  "tags" : [
    {
      "name" : "FileController"
    }
    ,
    {
      "name" : "MetadataController"
      ,
      "description" : "This service is used to browse and query metadata about the catalog, data\nproducts and their variables and classifications that have been defined."
    }
    ,
    {
      "name" : "PackagingController"
      ,
      "description" : "This service provides clients with a way to package data in usable formats."
    }
    ,
    {
      "name" : "QueryController"
      ,
      "description" : "This service is used to query data products for both record level and\naggregate data."
    }
    ,
    {
      "name" : "StatisticsController"
      ,
      "description" : "Allows clients to access statistics data about popular queries, catalog, and\ndata products."
    }
  ],
  "definitions" : {
    "json_AmChartsData" : {
      "type" : "object",
      "title" : "AmChartsData",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "dataProvider" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
}
            }
          }
        }
      ],
      "example" : {
  "dataProvider" : [ {
    "property1" : { },
    "property2" : { }
  }, {
    "property1" : { },
    "property2" : { }
  } ]
},
      "description" : ""
    }
    ,
    "json_AsciiFileParameters" : {
      "type" : "object",
      "title" : "AsciiFileParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_HeaderParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_AsciiReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "header" : true,
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "FIXED"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_AsciiReaderConfiguration" : {
      "type" : "object",
      "title" : "AsciiReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataReaderConfigurationImpl"
        },
        {
        }
      ],
      "example" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_Attribute" : {
      "type" : "object",
      "title" : "Attribute",
          "properties" : {
            "value" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Datum"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "value" : {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  },
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_BigQueryParameters" : {
      "type" : "object",
      "title" : "BigQueryParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSourceParameters"
        },
        {
          "properties" : {
            "tableId" : {
            "readOnly" : false,
"description" : "The unique BigQuery table ID (name).",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "Google credentials type. Valid values are service_account or\nauthorized_user.",
"type" : "string"
            },
            "projectId" : {
            "readOnly" : false,
"description" : "The BigQuery project ID.",
"type" : "string"
            },
            "privateKeyId" : {
            "readOnly" : false,
"description" : "The accounts private key ID",
"type" : "string"
            },
            "privateKey" : {
            "readOnly" : false,
"description" : "The private key.",
"type" : "string"
            },
            "clientEmail" : {
            "readOnly" : false,
"description" : "The email of the account.",
"type" : "string"
            },
            "clientId" : {
            "readOnly" : false,
"description" : "The client ID.",
"type" : "string"
            },
            "authUri" : {
            "readOnly" : false,
"description" : "The authorization URI.",
"type" : "string"
            },
            "tokenUri" : {
            "readOnly" : false,
"description" : "The token URI.",
"type" : "string"
            },
            "authProviderX509CertUrl" : {
            "readOnly" : false,
"description" : "The URL of the authorization provider.",
"type" : "string"
            },
            "clientX509CertUrl" : {
            "readOnly" : false,
"description" : "The URL of the clients certificate.",
"type" : "string"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_BigQueryReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "tableId" : "...",
  "type" : "...",
  "projectId" : "...",
  "privateKeyId" : "...",
  "privateKey" : "...",
  "clientEmail" : "...",
  "clientId" : "...",
  "authUri" : "...",
  "tokenUri" : "...",
  "authProviderX509CertUrl" : "...",
  "clientX509CertUrl" : "...",
  "readerConfiguration" : {
    "description" : "...",
    "id" : "...",
    "authProviderX509CertUrl" : "...",
    "projectId" : "...",
    "name" : "...",
    "privateKey" : "...",
    "privateKeyId" : "...",
    "authUri" : "...",
    "clientId" : "...",
    "clientX509CertUrl" : "...",
    "clientEmail" : "...",
    "tableId" : "...",
    "tokenUri" : "...",
    "type" : "...",
    "columnResolver" : { },
    "queryResolver" : { },
    "query" : {
      "columns" : [ { }, { } ],
      "weights" : [ { }, { } ],
      "queryOptions" : { },
      "totalColumnCount" : 12345,
      "isResolved" : true,
      "id" : "..."
    },
    "queryInput" : {
      "selectQuery" : { },
      "variables" : [ { }, { } ]
    },
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "$type" : "BIGQUERY"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_BigQueryReaderConfiguration" : {
      "type" : "object",
      "title" : "BigQueryReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_QueryableReaderConfiguration"
        },
        {
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "authProviderX509CertUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "projectId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "privateKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "privateKeyId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "authUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientX509CertUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientEmail" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tableId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tokenUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "description" : "...",
  "id" : "...",
  "authProviderX509CertUrl" : "...",
  "projectId" : "...",
  "name" : "...",
  "privateKey" : "...",
  "privateKeyId" : "...",
  "authUri" : "...",
  "clientId" : "...",
  "clientX509CertUrl" : "...",
  "clientEmail" : "...",
  "tableId" : "...",
  "tokenUri" : "...",
  "type" : "...",
  "columnResolver" : { },
  "queryResolver" : { },
  "query" : {
    "columns" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "weights" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "queryOptions" : {
      "orderBy" : {
        "property1" : "DESC",
        "property2" : "DESC"
      },
      "columnLimit" : 12345,
      "requiresSubQuery" : true,
      "offset" : 12345,
      "limit" : 12345,
      "distinct" : true,
      "includeTotals" : true,
      "count" : true,
      "relationalOperator" : "LIKE",
      "where" : { },
      "columnOffset" : 12345,
      "groupBy" : [ "...", "..." ]
    },
    "totalColumnCount" : 12345,
    "isResolved" : true,
    "id" : "..."
  },
  "queryInput" : {
    "selectQuery" : {
      "weights" : [ { }, { } ],
      "id" : "...",
      "totalColumnCount" : 12345,
      "queryOptions" : { },
      "columns" : [ { }, { } ],
      "isResolved" : true
    },
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ]
  },
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_CSVFormat" : {
      "type" : "object",
      "title" : "CSVFormat",
          "properties" : {
            "autoFlush" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "quoteCharacterSet" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "headerComments" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "commentMarker" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "commentMarkerSet" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "quoteCharacter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "recordSeparator" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "delimiter" : {
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "allowMissingColumnNames" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "nullStringSet" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "nullString" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ignoreSurroundingSpaces" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "trim" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "skipHeaderRecord" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "ignoreEmptyLines" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "ignoreHeaderCase" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "trailingDelimiter" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "quoteMode" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QuoteMode"
            },
            "escapeCharacterSet" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "header" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "escapeCharacter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "autoFlush" : true,
  "quoteCharacterSet" : true,
  "headerComments" : [ "...", "..." ],
  "commentMarker" : "...",
  "commentMarkerSet" : true,
  "quoteCharacter" : "...",
  "recordSeparator" : "...",
  "delimiter" : { },
  "allowMissingColumnNames" : true,
  "nullStringSet" : true,
  "nullString" : "...",
  "ignoreSurroundingSpaces" : true,
  "trim" : true,
  "skipHeaderRecord" : true,
  "ignoreEmptyLines" : true,
  "ignoreHeaderCase" : true,
  "trailingDelimiter" : true,
  "quoteMode" : "NONE",
  "escapeCharacterSet" : true,
  "header" : [ "...", "..." ],
  "escapeCharacter" : "..."
},
      "description" : ""
    }
    ,
    "json_Cardinality" : {
      "type" : "string",
      "title" : "Cardinality",
          "enum" : [
            "ZERO",
            "ONE",
            "MANY"
          ],
      "description" : ""
    }
    ,
    "json_Category" : {
      "type" : "object",
      "title" : "Category",
          "properties" : {
            "residual" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "synonyms" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "concept" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Concept"
            },
            "synonymCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "residual" : true,
  "synonyms" : [ "...", "..." ],
  "concept" : {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  },
  "synonymCount" : 12345
},
      "description" : ""
    }
    ,
    "json_CategorySet" : {
      "type" : "object",
      "title" : "CategorySet",
          "properties" : {
            "customPropertyCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "categorys" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Category"
}
            },
            "topConcept" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Concept"
            },
            "categoryCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "customProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CustomPropertyUsage"
}
            }
          },
      "example" : {
  "customPropertyCount" : 12345,
  "categorys" : [ {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  }, {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  } ],
  "topConcept" : {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  },
  "categoryCount" : 12345,
  "customProperties" : [ {
    "repeatable" : true,
    "propertyRepresentation" : {
      "uri" : "..."
    },
    "maxOccurs" : 12345,
    "defining" : true,
    "minOccurs" : 12345
  }, {
    "repeatable" : true,
    "propertyRepresentation" : {
      "uri" : "..."
    },
    "maxOccurs" : 12345,
    "defining" : true,
    "minOccurs" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_Cell" : {
      "type" : "object",
      "title" : "Cell",
          "properties" : {
            "v" : {
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "f" : {
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          },
      "example" : {
  "v" : { },
  "f" : { }
},
      "description" : ""
    }
    ,
    "json_Classification" : {
      "type" : "object",
      "title" : "Classification",
          "properties" : {
            "rootCodeCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "levels" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Level"
}
            },
            "levelCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "codes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Code"
}
            }
          },
      "example" : {
  "rootCodeCount" : 12345,
  "levels" : [ {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "NUMERIC",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  }, {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "ALPHA_NUMERIC",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  } ],
  "levelCount" : 12345,
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_ClassificationOptions" : {
      "type" : "object",
      "title" : "ClassificationOptions",
          "properties" : {
            "validTo" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "datePattern" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ResourceType"
            },
            "comment" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "levels" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            },
            "lifecycleStatus" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "audience" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validFrom" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "validTo" : "...",
  "datePattern" : "...",
  "resourceType" : {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  },
  "comment" : true,
  "levels" : [ 12345, 12345 ],
  "lifecycleStatus" : "...",
  "audience" : "...",
  "validFrom" : "..."
},
      "description" : ""
    }
    ,
    "json_ClassificationSummary" : {
      "type" : "object",
      "title" : "ClassificationSummary",
          "properties" : {
            "version" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Version"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "version" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "name" : "...",
  "id" : "...",
  "description" : "..."
},
      "description" : ""
    }
    ,
    "json_Code" : {
      "type" : "object",
      "title" : "Code",
          "properties" : {
            "translationAids" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ReferenceDocumentation"
}
            },
            "codeValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "childCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "residual" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "category" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Category"
            },
            "reverseTranslationAids" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ReferenceDocumentation"
}
            },
            "childUris" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "sinceVersion" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Version"
            },
            "synonyms" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "synonymCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "translationAidCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "parent" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "reverseTranslationAidCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "translationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "codeValue" : "...",
  "childCount" : 12345,
  "residual" : true,
  "category" : {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  },
  "reverseTranslationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "childUris" : [ "...", "..." ],
  "sinceVersion" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "synonyms" : [ "...", "..." ],
  "synonymCount" : 12345,
  "translationAidCount" : 12345,
  "parent" : "...",
  "reverseTranslationAidCount" : 12345
},
      "description" : ""
    }
    ,
    "json_CodeBookParameters" : {
      "type" : "object",
      "title" : "CodeBookParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MultiDataSetParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MultiDataSetReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "selectedDataSet" : "...",
    "availableDataSets" : [ "...", "..." ],
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "$type" : "CODEBOOK"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_CodeDataType" : {
      "type" : "string",
      "title" : "CodeDataType",
          "enum" : [
            "ALPHA",
            "ALPHA_NUMERIC",
            "NUMERIC",
            "NUMERIC_ALPHA"
          ],
      "description" : ""
    }
    ,
    "json_Column" : {
      "type" : "object",
      "title" : "Column",
          "properties" : {
            "unit" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "computation" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "subQueryOnly" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "requiresSubQuery" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "columnName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "recode" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "measure" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "unit" : true,
  "computation" : true,
  "subQueryOnly" : true,
  "value" : "...",
  "dataType" : "...",
  "requiresSubQuery" : true,
  "columnName" : "...",
  "recode" : true,
  "measure" : true
},
      "description" : ""
    }
    ,
    "json_Column_GoogleChartsData" : {
      "type" : "object",
      "title" : "Column",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "label" : "...",
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_ColumnResolver" : {
      "type" : "object",
      "title" : "ColumnResolver",
      "example" : { },
      "description" : ""
    }
    ,
    "json_Computation" : {
      "type" : "object",
      "title" : "Computation",
          "properties" : {
            "computationExpressionCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "computationExpressions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "variables" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Variable"
}
            },
            "variableCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "computationExpressionCount" : 12345,
  "computationExpressions" : [ "...", "..." ],
  "variables" : [ {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  }, {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  } ],
  "variableCount" : 12345
},
      "description" : ""
    }
    ,
    "json_Concept" : {
      "type" : "object",
      "title" : "Concept",
          "properties" : {
            "narrowerConceptCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "customPropertyCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "broaderConceptCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "definitionSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "narrowerConcepts" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Concept"
}
            },
            "customProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CustomPropertyUsage"
}
            },
            "relatedConcepts" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Concept"
}
            },
            "broaderConcepts" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Concept"
}
            },
            "synonymCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "relatedConceptCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "synonyms" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "narrowerConceptCount" : 12345,
  "customPropertyCount" : 12345,
  "broaderConceptCount" : 12345,
  "definitionSource" : "...",
  "narrowerConcepts" : [ {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  }, {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  } ],
  "customProperties" : [ {
    "repeatable" : true,
    "propertyRepresentation" : {
      "uri" : "..."
    },
    "maxOccurs" : 12345,
    "defining" : true,
    "minOccurs" : 12345
  }, {
    "repeatable" : true,
    "propertyRepresentation" : {
      "uri" : "..."
    },
    "maxOccurs" : 12345,
    "defining" : true,
    "minOccurs" : 12345
  } ],
  "relatedConcepts" : [ {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  }, {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  } ],
  "broaderConcepts" : [ {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  }, {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  } ],
  "synonymCount" : 12345,
  "relatedConceptCount" : 12345,
  "synonyms" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_ConceptualColumn" : {
      "type" : "object",
      "title" : "ConceptualColumn",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Column"
        },
        {
          "properties" : {
            "concept" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "regex" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "propertyFilters" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "variableGroup" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "named" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "exclusion" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "keyword" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "concept" : true,
  "regex" : true,
  "propertyFilters" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "variableGroup" : true,
  "named" : true,
  "exclusion" : true,
  "keyword" : true,
  "value" : "...",
  "unit" : true,
  "computation" : true,
  "subQueryOnly" : true,
  "dataType" : "...",
  "requiresSubQuery" : true,
  "columnName" : "...",
  "recode" : true,
  "measure" : true
},
      "description" : ""
    }
    ,
    "json_ConceptualSelectQuery" : {
      "type" : "object",
      "title" : "ConceptualSelectQuery",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_SelectQueryImpl"
        },
        {
          "properties" : {
            "columns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ConceptualColumn"
}
            },
            "weights" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ConceptualColumn"
}
            },
            "queryOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QueryOptions"
            }
          }
        }
      ],
      "example" : {
  "columns" : [ {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "weights" : [ {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "queryOptions" : {
    "orderBy" : {
      "property1" : "DESC",
      "property2" : "DESC"
    },
    "columnLimit" : 12345,
    "requiresSubQuery" : true,
    "offset" : 12345,
    "limit" : 12345,
    "distinct" : true,
    "includeTotals" : true,
    "count" : true,
    "relationalOperator" : "NE",
    "where" : {
      "@class" : "..."
    },
    "columnOffset" : 12345,
    "groupBy" : [ "...", "..." ]
  },
  "totalColumnCount" : 12345,
  "isResolved" : true,
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_ConfigurationSummary" : {
      "type" : "object",
      "title" : "ConfigurationSummary",
          "properties" : {
            "key" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ReaderKey"
            },
            "display" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "DDI_CODEBOOK",
  "display" : "..."
},
      "description" : ""
    }
    ,
    "json_CustomPropertyUsage" : {
      "type" : "object",
      "title" : "CustomPropertyUsage",
          "properties" : {
            "repeatable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "propertyRepresentation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Resource"
            },
            "maxOccurs" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "defining" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "minOccurs" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "repeatable" : true,
  "propertyRepresentation" : {
    "uri" : "..."
  },
  "maxOccurs" : 12345,
  "defining" : true,
  "minOccurs" : 12345
},
      "description" : ""
    }
    ,
    "json_DataPoint" : {
      "type" : "object",
      "title" : "DataPoint",
          "properties" : {
            "attributes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Attribute"
}
            },
            "unit" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Unit"
            },
            "measure" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Measure"
            },
            "value" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Datum"
            }
          },
      "example" : {
  "attributes" : [ {
    "value" : {
      "variable" : { },
      "value" : { }
    },
    "id" : "..."
  }, {
    "value" : {
      "variable" : { },
      "value" : { }
    },
    "id" : "..."
  } ],
  "unit" : {
    "id" : "...",
    "data" : [ {
      "variable" : { },
      "value" : { }
    }, {
      "variable" : { },
      "value" : { }
    } ]
  },
  "measure" : {
    "id" : "...",
    "data" : [ {
      "variable" : { },
      "value" : { }
    }, {
      "variable" : { },
      "value" : { }
    } ]
  },
  "value" : {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  }
},
      "description" : ""
    }
    ,
    "json_DataReaderConfigurationImpl" : {
      "type" : "object",
      "title" : "DataReaderConfigurationImpl",
          "properties" : {
            "recordLayout" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RecordLayout"
            },
            "dateConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DateConfiguration"
            }
          },
      "example" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_DataSelectQuery" : {
      "type" : "object",
      "title" : "DataSelectQuery",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ConceptualSelectQuery"
        },
        {
        }
      ],
      "example" : {
  "columns" : [ {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "weights" : [ {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "concept" : true,
    "regex" : true,
    "propertyFilters" : {
      "property1" : [ "...", "..." ],
      "property2" : [ "...", "..." ]
    },
    "variableGroup" : true,
    "named" : true,
    "exclusion" : true,
    "keyword" : true,
    "value" : "...",
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "queryOptions" : {
    "orderBy" : {
      "property1" : "DESC",
      "property2" : "ASC"
    },
    "columnLimit" : 12345,
    "requiresSubQuery" : true,
    "offset" : 12345,
    "limit" : 12345,
    "distinct" : true,
    "includeTotals" : true,
    "count" : true,
    "relationalOperator" : "MATCHES",
    "where" : {
      "@class" : "..."
    },
    "columnOffset" : 12345,
    "groupBy" : [ "...", "..." ]
  },
  "totalColumnCount" : 12345,
  "isResolved" : true,
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_DataSet" : {
      "type" : "object",
      "title" : "DataSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ResourceImpl"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "records" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Record"
}
            },
            "totals" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Record"
}
            },
            "recordLayout" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RecordLayout"
            },
            "recordMeasure" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recordUnit" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "classifications" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Classification"
}
            },
            "pointMeasure" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "location" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataSetInformation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataSetInformation"
            },
            "pointUnit" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "records" : [ {
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "data" : [ {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    }, {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    } ]
  }, {
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "data" : [ {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    }, {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    } ]
  } ],
  "totals" : [ {
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "data" : [ {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    }, {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    } ]
  }, {
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "data" : [ {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    }, {
      "attributes" : [ { }, { } ],
      "unit" : { },
      "measure" : { },
      "value" : { }
    } ]
  } ],
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "recordMeasure" : [ "...", "..." ],
  "recordUnit" : [ "...", "..." ],
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ],
  "pointMeasure" : [ "...", "..." ],
  "location" : "...",
  "dataSetInformation" : {
    "columnOffset" : 12345,
    "rowLimit" : 12345,
    "columnCount" : 12345,
    "notes" : [ "...", "..." ],
    "moreRows" : true,
    "columnLimit" : 12345,
    "moreColumns" : true,
    "rowCount" : 12345,
    "rowOffset" : 12345
  },
  "pointUnit" : [ "...", "..." ],
  "uri" : "..."
},
      "description" : ""
    }
    ,
    "json_DataSetInformation" : {
      "type" : "object",
      "title" : "DataSetInformation",
          "properties" : {
            "columnOffset" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "rowLimit" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "columnCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "notes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "moreRows" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "columnLimit" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "moreColumns" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "rowCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "rowOffset" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "columnOffset" : 12345,
  "rowLimit" : 12345,
  "columnCount" : 12345,
  "notes" : [ "...", "..." ],
  "moreRows" : true,
  "columnLimit" : 12345,
  "moreColumns" : true,
  "rowCount" : 12345,
  "rowOffset" : 12345
},
      "description" : ""
    }
    ,
    "json_DataSetMetadata" : {
      "type" : "object",
      "title" : "DataSetMetadata",
          "properties" : {
            "recordLayout" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RecordLayout"
            },
            "classifications" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Classification"
}
            }
          },
      "example" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ONE",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ]
},
      "description" : ""
    }
    ,
    "json_DataSetSerializerOptionSet" : {
      "type" : "object",
      "title" : "DataSetSerializerOptionSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "...",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "BOOLEAN",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "DOUBLE",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "SCRIPT"
},
      "description" : ""
    }
    ,
    "json_DataSourceParameters" : {
      "type" : "object",
      "title" : "DataSourceParameters",
          "properties" : {
            "$type" : {
            "readOnly" : false,
"description" : "The JSON object type.",
"type" : "string"
            }
          },
      "example" : {
  "$type" : "..."
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_DataWriterConfigurationImpl" : {
      "type" : "object",
      "title" : "DataWriterConfigurationImpl",
          "properties" : {
            "dateFormat" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "recordLayout" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RecordLayout"
            },
            "className" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "dateFormat" : "...",
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ONE",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "className" : "..."
},
      "description" : ""
    }
    ,
    "json_DataWriterImpl" : {
      "type" : "object",
      "title" : "DataWriterImpl",
          "properties" : {
            "batch" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "batch" : true
},
      "description" : ""
    }
    ,
    "json_DataWriterOptionSet" : {
      "type" : "object",
      "title" : "DataWriterOptionSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "...",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "BIG_DECIMAL",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BOOLEAN",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DOCUMENT"
},
      "description" : ""
    }
    ,
    "json_DatasetOptions" : {
      "type" : "object",
      "title" : "DatasetOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RecordLayoutOptions"
        },
        {
          "properties" : {
            "fileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hasHeader" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "delimiter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dateFormat" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ResourceType"
            }
          }
        }
      ],
      "example" : {
  "fileName" : "...",
  "hasHeader" : true,
  "delimiter" : "...",
  "dateFormat" : "...",
  "resourceType" : {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  },
  "fileType" : "CSV",
  "writeClassifications" : true
},
      "description" : ""
    }
    ,
    "json_DateConfiguration" : {
      "type" : "object",
      "title" : "DateConfiguration",
          "properties" : {
            "requiresYearWrapping" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "yearWrappingVariance" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "dateFormatMap" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "requiresYearWrapping" : true,
  "yearWrappingVariance" : 12345,
  "dateFormatMap" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_Datum" : {
      "type" : "object",
      "title" : "Datum",
          "properties" : {
            "variable" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Variable"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          },
      "example" : {
  "variable" : {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  },
  "value" : { }
},
      "description" : ""
    }
    ,
    "json_DatumGroup" : {
      "type" : "object",
      "title" : "DatumGroup",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "data" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Datum"
}
            }
          },
      "example" : {
  "id" : "...",
  "data" : [ {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  }, {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  } ]
},
      "description" : ""
    }
    ,
    "json_DdiCodeBook25PdfSerializer" : {
      "type" : "object",
      "title" : "DdiCodeBook25PdfSerializer",
      "example" : { },
      "description" : ""
    }
    ,
    "json_DdiCodebook25DataSetSerializer" : {
      "type" : "object",
      "title" : "DdiCodebook25DataSetSerializer",
      "example" : { },
      "description" : ""
    }
    ,
    "json_DdiCodebookOptions" : {
      "type" : "object",
      "title" : "DdiCodebookOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "DDI Codebook Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "TIME",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "TIMESTAMP",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DOCUMENT"
},
      "description" : ""
    }
    ,
    "json_DelimitedDataWriter" : {
      "type" : "object",
      "title" : "DelimitedDataWriter",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OutputStreamDataWriter"
        },
        {
        }
      ],
      "example" : {
  "batch" : true
},
      "description" : ""
    }
    ,
    "json_DelimitedDataWriterConfiguration" : {
      "type" : "object",
      "title" : "DelimitedDataWriterConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataWriterConfigurationImpl"
        },
        {
          "properties" : {
            "format" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CSVFormat"
            }
          }
        }
      ],
      "example" : {
  "format" : {
    "autoFlush" : true,
    "quoteCharacterSet" : true,
    "headerComments" : [ "...", "..." ],
    "commentMarker" : "...",
    "commentMarkerSet" : true,
    "quoteCharacter" : "...",
    "recordSeparator" : "...",
    "delimiter" : { },
    "allowMissingColumnNames" : true,
    "nullStringSet" : true,
    "nullString" : "...",
    "ignoreSurroundingSpaces" : true,
    "trim" : true,
    "skipHeaderRecord" : true,
    "ignoreEmptyLines" : true,
    "ignoreHeaderCase" : true,
    "trailingDelimiter" : true,
    "quoteMode" : "NON_NUMERIC",
    "escapeCharacterSet" : true,
    "header" : [ "...", "..." ],
    "escapeCharacter" : "..."
  },
  "dateFormat" : "...",
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "className" : "..."
},
      "description" : ""
    }
    ,
    "json_DelimitedFileParameters" : {
      "type" : "object",
      "title" : "DelimitedFileParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_HeaderParameters"
        },
        {
          "properties" : {
            "delimiter" : {
            "readOnly" : false,
"description" : "The character used to delimit values in the file.",
"type" : "string"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DelimitedReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "delimiter" : "...",
  "readerConfiguration" : {
    "delimiter" : "...",
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "header" : true,
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "DELIMITED"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_DelimitedOptions" : {
      "type" : "object",
      "title" : "DelimitedOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataWriterOptionSet"
        },
        {
          "properties" : {
            "fileExtension" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "fileExtension" : "...",
  "formatType" : "CSV Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "BYTE",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BYTE_ARRAY",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DOCUMENT"
},
      "description" : ""
    }
    ,
    "json_DelimitedReaderConfiguration" : {
      "type" : "object",
      "title" : "DelimitedReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AsciiReaderConfiguration"
        },
        {
          "properties" : {
            "delimiter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "delimiter" : "...",
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_ErrorMessage" : {
      "type" : "object",
      "title" : "ErrorMessage",
          "properties" : {
            "errors" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "code" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resolutions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "errors" : [ "...", "..." ],
  "code" : 12345,
  "resolutions" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_ExcelOptions" : {
      "type" : "object",
      "title" : "ExcelOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataWriterOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "Excel Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "TIMESTAMP",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "LONG_TEXT",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DOCUMENT"
},
      "description" : ""
    }
    ,
    "json_ExcelReaderConfiguration" : {
      "type" : "object",
      "title" : "ExcelReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MultiDataSetReaderConfiguration"
        },
        {
          "properties" : {
            "emptyRowCutoff" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "emptyRowCutoff" : 12345,
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_ExcelWriter" : {
      "type" : "object",
      "title" : "ExcelWriter",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_OutputStreamDataWriter"
        },
        {
        }
      ],
      "example" : {
  "batch" : true
},
      "description" : ""
    }
    ,
    "json_ExcelWriterConfiguration" : {
      "type" : "object",
      "title" : "ExcelWriterConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataWriterConfigurationImpl"
        },
        {
          "properties" : {
            "sheetName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "xlsx" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "customProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "sheetName" : "...",
  "xlsx" : true,
  "customProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "dateFormat" : "...",
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ONE",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "className" : "..."
},
      "description" : ""
    }
    ,
    "json_Facet" : {
      "type" : "object",
      "title" : "Facet",
          "properties" : {
            "applicableProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Property"
}
            },
            "facetType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FacetType"
            },
            "facetId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "applicablePropertyReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "facetTypeReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "applicableProperties" : [ {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  }, {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  } ],
  "facetType" : {
    "instances" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeId" : "...",
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ]
  },
  "facetId" : "...",
  "applicablePropertyReferences" : [ "...", "..." ],
  "facetTypeReference" : "..."
},
      "description" : ""
    }
    ,
    "json_FacetType" : {
      "type" : "object",
      "title" : "FacetType",
          "properties" : {
            "instances" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Facet"
}
            },
            "applicablePropertyReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "facetTypeId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "applicableProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Property"
}
            }
          },
      "example" : {
  "instances" : [ {
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ],
    "facetType" : {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    },
    "facetId" : "...",
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeReference" : "..."
  }, {
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ],
    "facetType" : {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    },
    "facetId" : "...",
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeReference" : "..."
  } ],
  "applicablePropertyReferences" : [ "...", "..." ],
  "facetTypeId" : "...",
  "applicableProperties" : [ {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  }, {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  } ]
},
      "description" : ""
    }
    ,
    "json_FactOptions" : {
      "type" : "object",
      "title" : "FactOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MetadataOptions"
        },
        {
          "properties" : {
            "jobId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "remove" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "processId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "apply" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "jobId" : "...",
  "sources" : [ "...", "..." ],
  "remove" : true,
  "processId" : "...",
  "apply" : true,
  "ids" : [ "...", "..." ],
  "limit" : 12345,
  "offset" : 12345,
  "sortOrder" : "ASC"
},
      "description" : ""
    }
    ,
    "json_FileBasedParameters" : {
      "type" : "object",
      "title" : "FileBasedParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSourceParameters"
        },
        {
          "properties" : {
            "fileInformation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FileInformation"
            }
          }
        }
      ],
      "example" : {
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "..."
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_FileInformation" : {
      "type" : "object",
      "title" : "FileInformation",
          "properties" : {
            "contentType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileSize" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "contentType" : "...",
  "fileName" : "...",
  "fileKey" : "...",
  "fileSize" : 12345
},
      "description" : ""
    }
    ,
    "json_FileType" : {
      "type" : "string",
      "title" : "FileType",
          "enum" : [
            "CSV",
            "DELIMITED",
            "FIXED"
          ],
      "description" : ""
    }
    ,
    "json_FormattedDataSet" : {
      "type" : "object",
      "title" : "FormattedDataSet",
      "example" : { },
      "description" : ""
    }
    ,
    "json_FormattedFrequencies" : {
      "type" : "object",
      "title" : "FormattedFrequencies",
          "properties" : {
            "sets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FormattedFrequencySet"
}
            }
          },
      "example" : {
  "sets" : [ { }, { } ]
},
      "description" : ""
    }
    ,
    "json_FormattedFrequencySet" : {
      "type" : "object",
      "title" : "FormattedFrequencySet",
      "example" : { },
      "description" : ""
    }
    ,
    "json_Frequencies" : {
      "type" : "object",
      "title" : "Frequencies",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_StatisticalSet"
        },
        {
          "properties" : {
            "sets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FrequencySet"
}
            }
          }
        }
      ],
      "example" : {
  "sets" : [ {
    "weighted" : true,
    "map" : {
      "property1" : 12345.0,
      "property2" : 12345.0
    },
    "weights" : [ "...", "..." ]
  }, {
    "weighted" : true,
    "map" : {
      "property1" : 12345.0,
      "property2" : 12345.0
    },
    "weights" : [ "...", "..." ]
  } ],
  "dateProduced" : 12345
},
      "description" : ""
    }
    ,
    "json_FrequencySet" : {
      "type" : "object",
      "title" : "FrequencySet",
          "properties" : {
            "weighted" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "map" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "number"
}
            },
            "weights" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "weighted" : true,
  "map" : {
    "property1" : 12345.0,
    "property2" : 12345.0
  },
  "weights" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_GoogleChartsData" : {
      "type" : "object",
      "title" : "GoogleChartsData",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "cols" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Column_GoogleChartsData"
}
            },
            "rows" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Row"
}
            }
          }
        }
      ],
      "example" : {
  "cols" : [ {
    "id" : "...",
    "label" : "...",
    "type" : "..."
  }, {
    "id" : "...",
    "label" : "...",
    "type" : "..."
  } ],
  "rows" : [ {
    "c" : [ {
      "v" : { },
      "f" : { }
    }, {
      "v" : { },
      "f" : { }
    } ]
  }, {
    "c" : [ {
      "v" : { },
      "f" : { }
    }, {
      "v" : { },
      "f" : { }
    } ]
  } ]
},
      "description" : ""
    }
    ,
    "json_HeaderParameters" : {
      "type" : "object",
      "title" : "HeaderParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FileBasedParameters"
        },
        {
          "properties" : {
            "header" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "header" : true,
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "..."
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_LegacyExcelParameters" : {
      "type" : "object",
      "title" : "LegacyExcelParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MultiDataSetFileParameters"
        },
        {
          "properties" : {
            "emptyRowCutoff" : {
            "readOnly" : false,
"description" : "Indicates how many empty rows can be read before end of file has been\nreached. This only needs to be set if you have empty records between\npopulated ones in your Excel file.",
"type" : "number"
            },
            "header" : {
            "readOnly" : false,
"description" : "Indicates if the file has a header row (variable names) on the first row.",
"type" : "boolean"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ExcelReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "emptyRowCutoff" : 12345,
  "header" : true,
  "readerConfiguration" : {
    "emptyRowCutoff" : 12345,
    "selectedDataSet" : "...",
    "availableDataSets" : [ "...", "..." ],
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "LEGACY"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_Level" : {
      "type" : "object",
      "title" : "Level",
          "properties" : {
            "conceptUri" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Concept"
            },
            "codePattern" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "codeDataType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CodeDataType"
            },
            "codes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Code"
}
            },
            "categorySetUri" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CategorySet"
            },
            "codeCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "depth" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "conceptUriUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "categorySetUriUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "conceptUri" : {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  },
  "codePattern" : "...",
  "codeDataType" : "NUMERIC",
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ],
  "categorySetUri" : {
    "customPropertyCount" : 12345,
    "categorys" : [ {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    }, {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    } ],
    "topConcept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "categoryCount" : 12345,
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ]
  },
  "codeCount" : 12345,
  "depth" : 12345,
  "conceptUriUri" : "...",
  "categorySetUriUri" : "..."
},
      "description" : ""
    }
    ,
    "json_LogicalComponent" : {
      "type" : "object",
      "title" : "LogicalComponent",
          "properties" : {
            "@class" : {
            "readOnly" : false,
"description" : "The JSON object type.",
"type" : "string"
            }
          },
      "example" : {
  "@class" : "..."
},
      "description" : ""
    }
    ,
    "json_Marker" : {
      "type" : "object",
      "title" : "Marker",
          "properties" : {
            "size" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            }
          },
      "example" : {
  "size" : [ 12345, 12345 ]
},
      "description" : ""
    }
    ,
    "json_Measure" : {
      "type" : "object",
      "title" : "Measure",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DatumGroup"
        },
        {
        }
      ],
      "example" : {
  "id" : "...",
  "data" : [ {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  }, {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  } ]
},
      "description" : ""
    }
    ,
    "json_MetadataOptions" : {
      "type" : "object",
      "title" : "MetadataOptions",
          "properties" : {
            "ids" : {
            "readOnly" : false,
"description" : "The ID or URI of the resources desired.",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "limit" : {
            "readOnly" : false,
"description" : "The number of resources to return.",
"type" : "number"
            },
            "offset" : {
            "readOnly" : false,
"description" : "The offset to start at.",
"type" : "number"
            },
            "sortOrder" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Order"
            }
          },
      "example" : {
  "ids" : [ "...", "..." ],
  "limit" : 12345,
  "offset" : 12345,
  "sortOrder" : "DESC"
},
      "description" : ""
    }
    ,
    "json_MetadataServiceCompletionDetails" : {
      "type" : "object",
      "title" : "MetadataServiceCompletionDetails",
          "properties" : {
            "duration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "started" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "ended" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "duration" : 12345,
  "started" : 12345,
  "ended" : 12345
},
      "description" : ""
    }
    ,
    "json_ModelResource" : {
      "type" : "object",
      "title" : "ModelResource",
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "description" : "...",
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_MtnaDataType" : {
      "type" : "string",
      "title" : "MtnaDataType",
          "enum" : [
            "DATE",
            "TIME",
            "TIMESTAMP",
            "BOOLEAN",
            "BYTE",
            "BYTE_ARRAY",
            "SHORT",
            "INTEGER",
            "LONG",
            "FLOAT",
            "DOUBLE",
            "NUMERIC",
            "BIG_INTEGER",
            "BIG_DECIMAL",
            "CHAR",
            "TEXT",
            "LONG_TEXT"
          ],
      "description" : ""
    }
    ,
    "json_MultiDataSetFileParameters" : {
      "type" : "object",
      "title" : "MultiDataSetFileParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FileBasedParameters"
        },
        {
          "properties" : {
            "selectedDataSet" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "availableDataSets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "..."
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_MultiDataSetParameters" : {
      "type" : "object",
      "title" : "MultiDataSetParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSourceParameters"
        },
        {
          "properties" : {
            "selectedDataSet" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "availableDataSets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "$type" : "..."
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_MultiDataSetReaderConfiguration" : {
      "type" : "object",
      "title" : "MultiDataSetReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataReaderConfigurationImpl"
        },
        {
          "properties" : {
            "selectedDataSet" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "availableDataSets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ONE",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_OpenExcelParameters" : {
      "type" : "object",
      "title" : "OpenExcelParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MultiDataSetFileParameters"
        },
        {
          "properties" : {
            "emptyRowCutoff" : {
            "readOnly" : false,
"description" : "Indicates how many empty rows can be read before end of file has been\nreached. This only needs to be set if you have empty records between\npopulated ones in your Excel file.",
"type" : "number"
            },
            "header" : {
            "readOnly" : false,
"description" : "Indicates if the file has a header row (variable names) on the first row.",
"type" : "boolean"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ExcelReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "emptyRowCutoff" : 12345,
  "header" : true,
  "readerConfiguration" : {
    "emptyRowCutoff" : 12345,
    "selectedDataSet" : "...",
    "availableDataSets" : [ "...", "..." ],
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "OPEN"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_Option" : {
      "type" : "object",
      "title" : "Option",
          "properties" : {
            "value" : {
            "readOnly" : false,
"description" : "The value of the option",
"type" : "object"
            },
            "required" : {
            "readOnly" : false,
"description" : "Indicates whether or not this option must be filled out and returned.",
"type" : "boolean"
            },
            "dataType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MtnaDataType"
            },
            "description" : {
            "readOnly" : false,
"description" : "Describes the purpose and intended use of the option. This is typically\nwhat should be displayed to the user.",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "The name of the option. This is used to identify it when it is processed\nand should not be changed.",
"type" : "string"
            },
            "options" : {
            "readOnly" : false,
"description" : "An array of possible values for the user to choose from.",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          },
      "example" : {
  "value" : { },
  "required" : true,
  "dataType" : "SHORT",
  "description" : "...",
  "name" : "...",
  "options" : [ { }, { } ]
},
      "description" : ""
    }
    ,
    "json_OptionBundle" : {
      "type" : "object",
      "title" : "OptionBundle",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "includedFormats" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackagingFormat"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "description" : "...",
  "includedFormats" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_OptionSet" : {
      "type" : "object",
      "title" : "OptionSet",
          "properties" : {
            "formatType" : {
            "readOnly" : false,
"description" : "The JSON object type.",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "The instance ID of this option set, used to uniquely identify the option\nset.",
"type" : "string"
            },
            "format" : {
            "readOnly" : false,
"description" : "The packaging format ID, to link to the packaging format and access its\ndescription and name.",
"type" : "string"
            },
            "options" : {
            "readOnly" : false,
"description" : "The options that can be configured to customize the output.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Option"
}
            },
            "type" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_OptionType"
            }
          },
      "example" : {
  "formatType" : "OptionSet",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "CHAR",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "SHORT",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DATA"
},
      "description" : ""
    }
    ,
    "json_OptionType" : {
      "type" : "string",
      "title" : "OptionType",
          "enum" : [
            "DATA",
            "DOCUMENT",
            "METADATA",
            "SCRIPT"
          ],
      "description" : ""
    }
    ,
    "json_Order" : {
      "type" : "string",
      "title" : "Order",
          "enum" : [
            "ASC",
            "DESC"
          ],
      "description" : ""
    }
    ,
    "json_OutputStreamDataWriter" : {
      "type" : "object",
      "title" : "OutputStreamDataWriter",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataWriterImpl"
        },
        {
        }
      ],
      "example" : {
  "batch" : true
},
      "description" : ""
    }
    ,
    "json_PackagingCompletionDetails" : {
      "type" : "object",
      "title" : "PackagingCompletionDetails",
          "properties" : {
            "detailsList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SqlSerializationDetails"
}
            },
            "infoList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FileInformation"
}
            }
          },
      "example" : {
  "detailsList" : [ {
    "tableName" : "...",
    "sqlSerializationDetails" : [ { }, { } ],
    "resourceUris" : [ "...", "..." ],
    "dateCreated" : 12345,
    "outputFormat" : "..."
  }, {
    "tableName" : "...",
    "sqlSerializationDetails" : [ { }, { } ],
    "resourceUris" : [ "...", "..." ],
    "dateCreated" : 12345,
    "outputFormat" : "..."
  } ],
  "infoList" : [ {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  }, {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  } ]
},
      "description" : ""
    }
    ,
    "json_PackagingFormat" : {
      "type" : "object",
      "title" : "PackagingFormat",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "description" : "...",
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_PackagingOptions" : {
      "type" : "object",
      "title" : "PackagingOptions",
          "properties" : {
            "documents" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackagingFormat"
}
            },
            "data" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackagingFormat"
}
            },
            "scripts" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackagingFormat"
}
            },
            "metadata" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PackagingFormat"
}
            }
          },
      "example" : {
  "documents" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "data" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "scripts" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "metadata" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_PdfCodebookOptions" : {
      "type" : "object",
      "title" : "PdfCodebookOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "PDF Codebook Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "TEXT",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "TIMESTAMP",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DOCUMENT"
},
      "description" : ""
    }
    ,
    "json_PlotlyBar" : {
      "type" : "object",
      "title" : "PlotlyBar",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "orientation" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "x" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "y" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "orientation" : "...",
  "type" : "...",
  "x" : [ { }, { } ],
  "y" : [ { }, { } ]
},
      "description" : "Handles vertical and horizontal bar charts. Assumes tabulated data with a\nsingle measure and a single dimension.\n\nExamples of valid json: var data = [ { x: ['giraffes', 'orangutans',\n'monkeys'], y: [20, 14, 23], type: 'bar' } ]; var data = [{ type: 'bar', x:\n[20, 14, 23], y: ['giraffes', 'orangutans', 'monkeys'], orientation: 'h' }]"
    }
    ,
    "json_PlotlyBoxPlot" : {
      "type" : "object",
      "title" : "PlotlyBoxPlot",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "boxpoints" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "jitter" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "pointpos" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "y" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "boxpoints" : "...",
  "jitter" : 12345.0,
  "pointpos" : 12345.0,
  "type" : "...",
  "y" : [ { }, { } ]
},
      "description" : "Assumes data with a single datum.\n\nExample: var data = [ { y: [0, 1, 1, 2, 3, 5, 8, 13, 21], boxpoints: 'all',\njitter: 0.3, pointpos: -1.8, type: 'box' } ]"
    }
    ,
    "json_PlotlyBubble" : {
      "type" : "object",
      "title" : "PlotlyBubble",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "marker" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Marker"
            },
            "mode" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "x" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "y" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "marker" : {
    "size" : [ 12345, 12345 ]
  },
  "mode" : "...",
  "x" : [ { }, { } ],
  "y" : [ { }, { } ]
},
      "description" : "Assumes data with two datum.\n\nvar trace1 = { x: [1, 2, 3, 4], y: [10, 11, 12, 13], mode: 'markers', marker:\n{ size: [10, 10, 10, 10] } }"
    }
    ,
    "json_PlotlyHistogram" : {
      "type" : "object",
      "title" : "PlotlyHistogram",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "opacity" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "orientation" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "x" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "y" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "opacity" : 12345.0,
  "orientation" : "...",
  "type" : "...",
  "x" : [ { }, { } ],
  "y" : [ { }, { } ]
},
      "description" : "Handles vertical and horizontal histograms.Assume we have one data point\n\nExamples: var trace1 = { x: x0, opacity: 0.75, type: 'histogram' }; var\ntrace2 = { x: x1, opacity: 0.75, type: 'histogram' }\n\nvar data = [ { x: [1,2,3], type: 'histogram' } ]; var data = [ { y: [1,2,3],\ntype: 'histogram' } ]"
    }
    ,
    "json_PlotlyPie" : {
      "type" : "object",
      "title" : "PlotlyPie",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "values" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "labels" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "values" : [ { }, { } ],
  "labels" : [ { }, { } ],
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_PlotlyScatter" : {
      "type" : "object",
      "title" : "PlotlyScatter",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "fill" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mode" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "x" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "y" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "fill" : "...",
  "mode" : "...",
  "type" : "...",
  "x" : [ { }, { } ],
  "y" : [ { }, { } ]
},
      "description" : "Used for area, line, and scatter charts. Assumes data with two datum.\n\nExamples of json structure this should follow: var trace1 = { x: [1, 2, 3,\n4], y: [10, 15, 13, 17], type: 'scatter' }\n\nvar trace1 = { x: [1, 2, 3, 4], y: [0, 2, 3, 5], fill: 'tozeroy', type:\n'scatter' }"
    }
    ,
    "json_ProcessStatus" : {
      "type" : "string",
      "title" : "ProcessStatus",
          "enum" : [
            "QUEUED",
            "PROCESSING",
            "COMPLETED",
            "FAILED",
            "CANCELLED"
          ],
      "description" : ""
    }
    ,
    "json_ProcessStatusDetailOfMetadataServiceCompletionDetails" : {
      "type" : "object",
      "title" : "ProcessStatusDetailOfMetadataServiceCompletionDetails",
          "properties" : {
            "status" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ProcessStatus"
            },
            "completionDetails" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MetadataServiceCompletionDetails"
            },
            "failure" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Throwable"
            },
            "completed" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "statusMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "status" : "QUEUED",
  "completionDetails" : {
    "duration" : 12345,
    "started" : 12345,
    "ended" : 12345
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "completed" : 12345,
  "statusMessage" : "...",
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_ProcessStatusDetailOfPackagingCompletionDetails" : {
      "type" : "object",
      "title" : "ProcessStatusDetailOfPackagingCompletionDetails",
          "properties" : {
            "statusMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "completed" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "status" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ProcessStatus"
            },
            "completionDetails" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_PackagingCompletionDetails"
            },
            "failure" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Throwable"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "statusMessage" : "...",
  "completed" : 12345,
  "status" : "QUEUED",
  "completionDetails" : {
    "detailsList" : [ {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    }, {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    } ],
    "infoList" : [ {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    }, {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    } ]
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_Property" : {
      "type" : "object",
      "title" : "Property",
          "properties" : {
            "facets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Facet"
}
            },
            "facetedBaseProperty" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Property"
            },
            "overridable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "reference" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "repeatable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "transient" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "faceted" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "representationReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "inheritable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "representation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ModelResource"
            },
            "facetedBasePropertyReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "facetTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FacetType"
}
            },
            "facetReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "facets" : [ {
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ],
    "facetType" : {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    },
    "facetId" : "...",
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeReference" : "..."
  }, {
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ],
    "facetType" : {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    },
    "facetId" : "...",
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeReference" : "..."
  } ],
  "facetedBaseProperty" : {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  },
  "overridable" : true,
  "reference" : true,
  "repeatable" : true,
  "transient" : true,
  "faceted" : true,
  "representationReference" : "...",
  "inheritable" : true,
  "representation" : {
    "description" : "...",
    "name" : "..."
  },
  "facetedBasePropertyReference" : "...",
  "facetTypes" : [ {
    "instances" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeId" : "...",
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ]
  }, {
    "instances" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "applicablePropertyReferences" : [ "...", "..." ],
    "facetTypeId" : "...",
    "applicableProperties" : [ {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    }, {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    } ]
  } ],
  "facetReferences" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_PropertyUsage" : {
      "type" : "object",
      "title" : "PropertyUsage",
          "properties" : {
            "inferred" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "inferenceResourceType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ResourceType"
            },
            "property" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Property"
            },
            "inferenceResourceTypeReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "overridable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "inverseInferencePropertyReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "propertyUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "inverseInferenceProperty" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Property"
            },
            "representation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ModelResource"
            },
            "ordered" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "defining" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "representationReference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repeatable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "inheritable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "optional" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "inferred" : true,
  "inferenceResourceType" : {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  },
  "property" : {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  },
  "inferenceResourceTypeReference" : "...",
  "overridable" : true,
  "inverseInferencePropertyReference" : "...",
  "propertyUri" : "...",
  "inverseInferenceProperty" : {
    "facets" : [ {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    }, {
      "applicableProperties" : [ { }, { } ],
      "facetType" : { },
      "facetId" : "...",
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeReference" : "..."
    } ],
    "facetedBaseProperty" : { },
    "overridable" : true,
    "reference" : true,
    "repeatable" : true,
    "transient" : true,
    "faceted" : true,
    "representationReference" : "...",
    "inheritable" : true,
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "facetedBasePropertyReference" : "...",
    "facetTypes" : [ {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    }, {
      "instances" : [ { }, { } ],
      "applicablePropertyReferences" : [ "...", "..." ],
      "facetTypeId" : "...",
      "applicableProperties" : [ { }, { } ]
    } ],
    "facetReferences" : [ "...", "..." ]
  },
  "representation" : {
    "description" : "...",
    "name" : "..."
  },
  "ordered" : true,
  "defining" : true,
  "representationReference" : "...",
  "repeatable" : true,
  "inheritable" : true,
  "optional" : true
},
      "description" : ""
    }
    ,
    "json_QueryInput" : {
      "type" : "object",
      "title" : "QueryInput",
          "properties" : {
            "selectQuery" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SelectQueryOfColumn"
            },
            "variables" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Variable"
}
            }
          },
      "example" : {
  "selectQuery" : {
    "weights" : [ {
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "value" : "...",
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "value" : "...",
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "id" : "...",
    "totalColumnCount" : 12345,
    "queryOptions" : {
      "orderBy" : {
        "property1" : "ASC",
        "property2" : "ASC"
      },
      "columnLimit" : 12345,
      "requiresSubQuery" : true,
      "offset" : 12345,
      "limit" : 12345,
      "distinct" : true,
      "includeTotals" : true,
      "count" : true,
      "relationalOperator" : "LE",
      "where" : { },
      "columnOffset" : 12345,
      "groupBy" : [ "...", "..." ]
    },
    "columns" : [ {
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "value" : "...",
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "value" : "...",
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "isResolved" : true
  },
  "variables" : [ {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  }, {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  } ]
},
      "description" : ""
    }
    ,
    "json_QueryOptions" : {
      "type" : "object",
      "title" : "QueryOptions",
          "properties" : {
            "orderBy" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_Order"
}
            },
            "columnLimit" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "requiresSubQuery" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "offset" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "limit" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "distinct" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "includeTotals" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "count" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "relationalOperator" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RelationalOperator"
            },
            "where" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_LogicalComponent"
            },
            "columnOffset" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "groupBy" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "orderBy" : {
    "property1" : "ASC",
    "property2" : "ASC"
  },
  "columnLimit" : 12345,
  "requiresSubQuery" : true,
  "offset" : 12345,
  "limit" : 12345,
  "distinct" : true,
  "includeTotals" : true,
  "count" : true,
  "relationalOperator" : "GE",
  "where" : {
    "@class" : "..."
  },
  "columnOffset" : 12345,
  "groupBy" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_QueryableDataSourceType" : {
      "type" : "string",
      "title" : "QueryableDataSourceType",
          "enum" : [
            "BIGQUERY",
            "SOCRATA",
            "MYSQL",
            "MICROSOFT",
            "VERTICA",
            "MONET",
            "H2",
            "VIRTUOSO",
            "ORACLE",
            "POSTGRE"
          ],
      "description" : ""
    }
    ,
    "json_QueryableReaderConfiguration" : {
      "type" : "object",
      "title" : "QueryableReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataReaderConfigurationImpl"
        },
        {
          "properties" : {
            "columnResolver" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ColumnResolver"
            },
            "queryResolver" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SelectQueryResolver"
            },
            "query" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataSelectQuery"
            },
            "queryInput" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QueryInput"
            }
          }
        }
      ],
      "example" : {
  "columnResolver" : { },
  "queryResolver" : { },
  "query" : {
    "columns" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "weights" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "queryOptions" : {
      "orderBy" : {
        "property1" : "ASC",
        "property2" : "ASC"
      },
      "columnLimit" : 12345,
      "requiresSubQuery" : true,
      "offset" : 12345,
      "limit" : 12345,
      "distinct" : true,
      "includeTotals" : true,
      "count" : true,
      "relationalOperator" : "GT",
      "where" : { },
      "columnOffset" : 12345,
      "groupBy" : [ "...", "..." ]
    },
    "totalColumnCount" : 12345,
    "isResolved" : true,
    "id" : "..."
  },
  "queryInput" : {
    "selectQuery" : {
      "weights" : [ { }, { } ],
      "id" : "...",
      "totalColumnCount" : 12345,
      "queryOptions" : { },
      "columns" : [ { }, { } ],
      "isResolved" : true
    },
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ]
  },
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ONE",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_QuoteMode" : {
      "type" : "string",
      "title" : "QuoteMode",
          "enum" : [
            "ALL",
            "ALL_NON_NULL",
            "MINIMAL",
            "NON_NUMERIC",
            "NONE"
          ],
      "description" : ""
    }
    ,
    "json_RdsCatalog" : {
      "type" : "object",
      "title" : "RdsCatalog",
          "properties" : {
            "urls" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "urlCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isPrivate" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "dataProductCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataProducts" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RdsDataProduct"
}
            },
            "catalogCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "lastUpdate" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "exclusion" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "documentation" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "catalogs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RdsCatalog"
}
            },
            "keywordCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "keywords" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "urls" : [ "...", "..." ],
  "urlCount" : 12345,
  "isPrivate" : true,
  "dataProductCount" : 12345,
  "label" : "...",
  "dataProducts" : [ {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  }, {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  } ],
  "catalogCount" : 12345,
  "lastUpdate" : 12345,
  "exclusion" : "...",
  "name" : "...",
  "documentation" : "...",
  "catalogs" : [ {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  }, {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  } ],
  "keywordCount" : 12345,
  "id" : "...",
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "uri" : "..."
},
      "description" : ""
    }
    ,
    "json_RdsCatalogStatistics" : {
      "type" : "object",
      "title" : "RdsCatalogStatistics",
          "properties" : {
            "totalQueries" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "productStatistics" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RdsDataProductStatistics"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "queriesOverTime" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FormattedDataSet"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "totalQueries" : 12345,
  "name" : "...",
  "productStatistics" : [ {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  }, {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  } ],
  "id" : "...",
  "queriesOverTime" : { },
  "description" : "..."
},
      "description" : ""
    }
    ,
    "json_RdsDataProduct" : {
      "type" : "object",
      "title" : "RdsDataProduct",
          "properties" : {
            "isPrivate" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "urls" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "exclusion" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "keywords" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "dataSource" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RdsDataSource"
            },
            "keywordCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "documentation" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastUpdate" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "uri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "urlCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "isPrivate" : true,
  "id" : "...",
  "urls" : [ "...", "..." ],
  "exclusion" : "...",
  "keywords" : [ "...", "..." ],
  "dataSource" : {
    "description" : "...",
    "target" : {
      "tableName" : "...",
      "dataSourceType" : "H2",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "name" : "...",
    "configuration" : {
      "tableName" : "...",
      "dataSourceType" : "POSTGRE",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "purpose" : [ "...", "..." ],
    "id" : "..."
  },
  "keywordCount" : 12345,
  "name" : "...",
  "documentation" : "...",
  "lastUpdate" : 12345,
  "uri" : "...",
  "label" : "...",
  "description" : "...",
  "urlCount" : 12345
},
      "description" : ""
    }
    ,
    "json_RdsDataProductStatistics" : {
      "type" : "object",
      "title" : "RdsDataProductStatistics",
          "properties" : {
            "totalQueries" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "popularColumns" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FormattedDataSet"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "queriesOverTimeByService" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "queriesOverTime" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FormattedDataSet"
            },
            "popularColumnsByService" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "popularFiltersByService" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "popularFilters" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FormattedDataSet"
            }
          },
      "example" : {
  "totalQueries" : 12345,
  "description" : "...",
  "popularColumns" : { },
  "id" : "...",
  "queriesOverTimeByService" : {
    "property1" : { },
    "property2" : { }
  },
  "queriesOverTime" : { },
  "popularColumnsByService" : {
    "property1" : { },
    "property2" : { }
  },
  "name" : "...",
  "popularFiltersByService" : {
    "property1" : { },
    "property2" : { }
  },
  "popularFilters" : { }
},
      "description" : ""
    }
    ,
    "json_RdsDataSetInformation" : {
      "type" : "object",
      "title" : "RdsDataSetInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetInformation"
        },
        {
          "properties" : {
            "format" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SerializerType"
            },
            "includeMetadata" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "cached" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "start" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "preQueryTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "queryTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "postQueryTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "end" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalProcessingTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "format" : "AMCHARTS",
  "includeMetadata" : true,
  "cached" : true,
  "start" : "...",
  "preQueryTime" : 12345,
  "queryTime" : 12345,
  "postQueryTime" : 12345,
  "end" : "...",
  "totalProcessingTime" : 12345,
  "columnOffset" : 12345,
  "rowLimit" : 12345,
  "columnCount" : 12345,
  "notes" : [ "...", "..." ],
  "moreRows" : true,
  "columnLimit" : 12345,
  "moreColumns" : true,
  "rowCount" : 12345,
  "rowOffset" : 12345
},
      "description" : ""
    }
    ,
    "json_RdsDataSource" : {
      "type" : "object",
      "title" : "RdsDataSource",
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "target" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SqlParameters"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "configuration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataSourceParameters"
            },
            "purpose" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "description" : "...",
  "target" : {
    "tableName" : "...",
    "dataSourceType" : "MONET",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "name" : "...",
  "configuration" : {
    "tableName" : "...",
    "dataSourceType" : "MICROSOFT",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "purpose" : [ "...", "..." ],
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_RdsFormattedData" : {
      "type" : "object",
      "title" : "RdsFormattedData",
      "example" : { },
      "description" : ""
    }
    ,
    "json_RdsFormattedVariableProfile" : {
      "type" : "object",
      "title" : "RdsFormattedVariableProfile",
          "properties" : {
            "frequencies" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FormattedFrequencies"
            },
            "summaryStatistics" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SummaryStatistics"
            }
          },
      "example" : {
  "frequencies" : {
    "sets" : [ { }, { } ]
  },
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  }
},
      "description" : ""
    }
    ,
    "json_RdsQueryOptions" : {
      "type" : "object",
      "title" : "RdsQueryOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_QueryOptions"
        },
        {
          "properties" : {
            "serializer" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SerializerType"
            },
            "factOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FactOptions"
            },
            "classOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MetadataOptions"
            },
            "apiKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "includeMetadata" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "injectMetadata" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "codeOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MetadataOptions"
            }
          }
        }
      ],
      "example" : {
  "serializer" : "TABLEAU",
  "factOptions" : {
    "jobId" : "...",
    "sources" : [ "...", "..." ],
    "remove" : true,
    "processId" : "...",
    "apply" : true,
    "ids" : [ "...", "..." ],
    "limit" : 12345,
    "offset" : 12345,
    "sortOrder" : "DESC"
  },
  "classOptions" : {
    "ids" : [ "...", "..." ],
    "limit" : 12345,
    "offset" : 12345,
    "sortOrder" : "ASC"
  },
  "apiKey" : "...",
  "includeMetadata" : true,
  "injectMetadata" : true,
  "codeOptions" : {
    "ids" : [ "...", "..." ],
    "limit" : 12345,
    "offset" : 12345,
    "sortOrder" : "DESC"
  },
  "orderBy" : {
    "property1" : "DESC",
    "property2" : "ASC"
  },
  "columnLimit" : 12345,
  "requiresSubQuery" : true,
  "offset" : 12345,
  "limit" : 12345,
  "distinct" : true,
  "includeTotals" : true,
  "count" : true,
  "relationalOperator" : "LT",
  "where" : {
    "@class" : "..."
  },
  "columnOffset" : 12345,
  "groupBy" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_RdsSelectQuery" : {
      "type" : "object",
      "title" : "RdsSelectQuery",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_SelectQueryImpl"
        },
        {
          "properties" : {
            "queryOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RdsQueryOptions"
            }
          }
        }
      ],
      "example" : {
  "queryOptions" : {
    "serializer" : "PLOTLY_BUBBLE",
    "factOptions" : {
      "jobId" : "...",
      "sources" : [ "...", "..." ],
      "remove" : true,
      "processId" : "...",
      "apply" : true,
      "ids" : [ "...", "..." ],
      "limit" : 12345,
      "offset" : 12345,
      "sortOrder" : "DESC"
    },
    "classOptions" : {
      "ids" : [ "...", "..." ],
      "limit" : 12345,
      "offset" : 12345,
      "sortOrder" : "DESC"
    },
    "apiKey" : "...",
    "includeMetadata" : true,
    "injectMetadata" : true,
    "codeOptions" : {
      "ids" : [ "...", "..." ],
      "limit" : 12345,
      "offset" : 12345,
      "sortOrder" : "ASC"
    },
    "orderBy" : {
      "property1" : "DESC",
      "property2" : "ASC"
    },
    "columnLimit" : 12345,
    "requiresSubQuery" : true,
    "offset" : 12345,
    "limit" : 12345,
    "distinct" : true,
    "includeTotals" : true,
    "count" : true,
    "relationalOperator" : "LE",
    "where" : {
      "@class" : "..."
    },
    "columnOffset" : 12345,
    "groupBy" : [ "...", "..." ]
  },
  "columns" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "totalColumnCount" : 12345,
  "isResolved" : true,
  "id" : "...",
  "weights" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ]
},
      "description" : "This is a wrapper class for finalized SelectQueryImpl<Column> that\nensures the #getQueryOptions() returns an instance of\nRdsQueryOptions so they dont always have to be checked / cast to the\nappropriate class."
    }
    ,
    "json_ReaderKey" : {
      "type" : "string",
      "title" : "ReaderKey",
          "enum" : [
            "BIGQUERY",
            "DDI_CODEBOOK",
            "DELIMITED_ASCII",
            "FIXED_ASCII",
            "LEGACY_EXCEL",
            "OPEN_EXCEL",
            "SAS",
            "SOCRATA",
            "SPSS",
            "SQL",
            "STATA",
            "XPT",
            "ZIP"
          ],
      "description" : ""
    }
    ,
    "json_Record" : {
      "type" : "object",
      "title" : "Record",
          "properties" : {
            "unit" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Unit"
            },
            "measure" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Measure"
            },
            "data" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataPoint"
}
            }
          },
      "example" : {
  "unit" : {
    "id" : "...",
    "data" : [ {
      "variable" : { },
      "value" : { }
    }, {
      "variable" : { },
      "value" : { }
    } ]
  },
  "measure" : {
    "id" : "...",
    "data" : [ {
      "variable" : { },
      "value" : { }
    }, {
      "variable" : { },
      "value" : { }
    } ]
  },
  "data" : [ {
    "attributes" : [ {
      "value" : { },
      "id" : "..."
    }, {
      "value" : { },
      "id" : "..."
    } ],
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "value" : {
      "variable" : { },
      "value" : { }
    }
  }, {
    "attributes" : [ {
      "value" : { },
      "id" : "..."
    }, {
      "value" : { },
      "id" : "..."
    } ],
    "unit" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "measure" : {
      "id" : "...",
      "data" : [ { }, { } ]
    },
    "value" : {
      "variable" : { },
      "value" : { }
    }
  } ]
},
      "description" : ""
    }
    ,
    "json_RecordLayout" : {
      "type" : "object",
      "title" : "RecordLayout",
          "properties" : {
            "variables" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Variable"
}
            },
            "layoutVariableCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "primaryKey" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VariableGroup"
            }
          },
      "example" : {
  "variables" : [ {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  }, {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  } ],
  "layoutVariableCount" : 12345,
  "primaryKey" : {
    "purpose" : "...",
    "cardinality" : "MANY",
    "variableCount" : 12345,
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ]
  }
},
      "description" : ""
    }
    ,
    "json_RecordLayoutOptions" : {
      "type" : "object",
      "title" : "RecordLayoutOptions",
          "properties" : {
            "fileType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FileType"
            },
            "resourceType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ResourceType"
            },
            "writeClassifications" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "fileType" : "DELIMITED",
  "resourceType" : {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  },
  "writeClassifications" : true
},
      "description" : ""
    }
    ,
    "json_ReferenceDocumentation" : {
      "type" : "object",
      "title" : "ReferenceDocumentation",
          "properties" : {
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "reference" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "value" : "...",
  "reference" : "..."
},
      "description" : ""
    }
    ,
    "json_RelationalOperator" : {
      "type" : "string",
      "title" : "RelationalOperator",
          "enum" : [
            "GE",
            "LE",
            "NE",
            "EQ",
            "GT",
            "LT",
            "LIKE",
            "MATCHES",
            "NOT_NULL"
          ],
      "description" : ""
    }
    ,
    "json_Resource" : {
      "type" : "object",
      "title" : "Resource",
          "properties" : {
            "uri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "uri" : "..."
},
      "description" : ""
    }
    ,
    "json_ResourceImpl" : {
      "type" : "object",
      "title" : "ResourceImpl",
          "properties" : {
            "uri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "uri" : "..."
},
      "description" : ""
    }
    ,
    "json_ResourceType" : {
      "type" : "object",
      "title" : "ResourceType",
          "properties" : {
            "contextTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceType"
}
            },
            "basisTypeReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "basisTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceType"
}
            },
            "baseTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceType"
}
            },
            "contextTypeReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "allPropertyUsages" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyUsage"
}
            },
            "baseTypeReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "rootTypeReferences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "rootTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ResourceType"
}
            }
          },
      "example" : {
  "contextTypes" : [ {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  }, {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  } ],
  "basisTypeReferences" : [ "...", "..." ],
  "basisTypes" : [ {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  }, {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  } ],
  "baseTypes" : [ {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  }, {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  } ],
  "contextTypeReferences" : [ "...", "..." ],
  "allPropertyUsages" : [ {
    "inferred" : true,
    "inferenceResourceType" : {
      "contextTypes" : [ { }, { } ],
      "basisTypeReferences" : [ "...", "..." ],
      "basisTypes" : [ { }, { } ],
      "baseTypes" : [ { }, { } ],
      "contextTypeReferences" : [ "...", "..." ],
      "allPropertyUsages" : [ { }, { } ],
      "baseTypeReferences" : [ "...", "..." ],
      "rootTypeReferences" : [ "...", "..." ],
      "rootTypes" : [ { }, { } ]
    },
    "property" : {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    },
    "inferenceResourceTypeReference" : "...",
    "overridable" : true,
    "inverseInferencePropertyReference" : "...",
    "propertyUri" : "...",
    "inverseInferenceProperty" : {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    },
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "ordered" : true,
    "defining" : true,
    "representationReference" : "...",
    "repeatable" : true,
    "inheritable" : true,
    "optional" : true
  }, {
    "inferred" : true,
    "inferenceResourceType" : {
      "contextTypes" : [ { }, { } ],
      "basisTypeReferences" : [ "...", "..." ],
      "basisTypes" : [ { }, { } ],
      "baseTypes" : [ { }, { } ],
      "contextTypeReferences" : [ "...", "..." ],
      "allPropertyUsages" : [ { }, { } ],
      "baseTypeReferences" : [ "...", "..." ],
      "rootTypeReferences" : [ "...", "..." ],
      "rootTypes" : [ { }, { } ]
    },
    "property" : {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    },
    "inferenceResourceTypeReference" : "...",
    "overridable" : true,
    "inverseInferencePropertyReference" : "...",
    "propertyUri" : "...",
    "inverseInferenceProperty" : {
      "facets" : [ { }, { } ],
      "facetedBaseProperty" : { },
      "overridable" : true,
      "reference" : true,
      "repeatable" : true,
      "transient" : true,
      "faceted" : true,
      "representationReference" : "...",
      "inheritable" : true,
      "representation" : { },
      "facetedBasePropertyReference" : "...",
      "facetTypes" : [ { }, { } ],
      "facetReferences" : [ "...", "..." ]
    },
    "representation" : {
      "description" : "...",
      "name" : "..."
    },
    "ordered" : true,
    "defining" : true,
    "representationReference" : "...",
    "repeatable" : true,
    "inheritable" : true,
    "optional" : true
  } ],
  "baseTypeReferences" : [ "...", "..." ],
  "rootTypeReferences" : [ "...", "..." ],
  "rootTypes" : [ {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  }, {
    "contextTypes" : [ { }, { } ],
    "basisTypeReferences" : [ "...", "..." ],
    "basisTypes" : [ { }, { } ],
    "baseTypes" : [ { }, { } ],
    "contextTypeReferences" : [ "...", "..." ],
    "allPropertyUsages" : [ {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    }, {
      "inferred" : true,
      "inferenceResourceType" : { },
      "property" : { },
      "inferenceResourceTypeReference" : "...",
      "overridable" : true,
      "inverseInferencePropertyReference" : "...",
      "propertyUri" : "...",
      "inverseInferenceProperty" : { },
      "representation" : { },
      "ordered" : true,
      "defining" : true,
      "representationReference" : "...",
      "repeatable" : true,
      "inheritable" : true,
      "optional" : true
    } ],
    "baseTypeReferences" : [ "...", "..." ],
    "rootTypeReferences" : [ "...", "..." ],
    "rootTypes" : [ { }, { } ]
  } ]
},
      "description" : ""
    }
    ,
    "json_Row" : {
      "type" : "object",
      "title" : "Row",
          "properties" : {
            "c" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Cell"
}
            }
          },
      "example" : {
  "c" : [ {
    "v" : { },
    "f" : { }
  }, {
    "v" : { },
    "f" : { }
  } ]
},
      "description" : ""
    }
    ,
    "json_SasDatasetSerializer" : {
      "type" : "object",
      "title" : "SasDatasetSerializer",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ScriptDatasetSerializer"
        },
        {
          "properties" : {
            "listEnd" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classificationSerializer" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ScriptClassificationSerializer"
            },
            "fixedDataHeader" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileEnding" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "listEnd" : "...",
  "classificationSerializer" : {
    "classificationSectionHeader" : "..."
  },
  "fixedDataHeader" : "...",
  "fileEnding" : "..."
},
      "description" : ""
    }
    ,
    "json_SasOptions" : {
      "type" : "object",
      "title" : "SasOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "Sas Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "DATE",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BIG_INTEGER",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "SCRIPT"
},
      "description" : ""
    }
    ,
    "json_SasParameters" : {
      "type" : "object",
      "title" : "SasParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FileBasedParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataReaderConfigurationImpl"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "SAS"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_ScriptClassificationSerializer" : {
      "type" : "object",
      "title" : "ScriptClassificationSerializer",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ScriptSerializer"
        },
        {
          "properties" : {
            "classificationSectionHeader" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "classificationSectionHeader" : "..."
},
      "description" : ""
    }
    ,
    "json_ScriptDatasetSerializer" : {
      "type" : "object",
      "title" : "ScriptDatasetSerializer",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ScriptSerializer"
        },
        {
        }
      ],
      "example" : { },
      "description" : ""
    }
    ,
    "json_ScriptSerializer" : {
      "type" : "object",
      "title" : "ScriptSerializer",
      "example" : { },
      "description" : ""
    }
    ,
    "json_SelectQueryImpl" : {
      "type" : "object",
      "title" : "SelectQueryImpl",
          "properties" : {
            "columns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Column"
}
            },
            "totalColumnCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isResolved" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "weights" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Column"
}
            },
            "queryOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QueryOptions"
            }
          },
      "example" : {
  "columns" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "totalColumnCount" : 12345,
  "isResolved" : true,
  "id" : "...",
  "weights" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "queryOptions" : {
    "orderBy" : {
      "property1" : "DESC",
      "property2" : "ASC"
    },
    "columnLimit" : 12345,
    "requiresSubQuery" : true,
    "offset" : 12345,
    "limit" : 12345,
    "distinct" : true,
    "includeTotals" : true,
    "count" : true,
    "relationalOperator" : "MATCHES",
    "where" : {
      "@class" : "..."
    },
    "columnOffset" : 12345,
    "groupBy" : [ "...", "..." ]
  }
},
      "description" : ""
    }
    ,
    "json_SelectQueryOfColumn" : {
      "type" : "object",
      "title" : "SelectQueryOfColumn",
          "properties" : {
            "weights" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Column"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalColumnCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "queryOptions" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QueryOptions"
            },
            "columns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Column"
}
            },
            "isResolved" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "weights" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "id" : "...",
  "totalColumnCount" : 12345,
  "queryOptions" : {
    "orderBy" : {
      "property1" : "DESC",
      "property2" : "DESC"
    },
    "columnLimit" : 12345,
    "requiresSubQuery" : true,
    "offset" : 12345,
    "limit" : 12345,
    "distinct" : true,
    "includeTotals" : true,
    "count" : true,
    "relationalOperator" : "LIKE",
    "where" : {
      "@class" : "..."
    },
    "columnOffset" : 12345,
    "groupBy" : [ "...", "..." ]
  },
  "columns" : [ {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  }, {
    "unit" : true,
    "computation" : true,
    "subQueryOnly" : true,
    "value" : "...",
    "dataType" : "...",
    "requiresSubQuery" : true,
    "columnName" : "...",
    "recode" : true,
    "measure" : true
  } ],
  "isResolved" : true
},
      "description" : ""
    }
    ,
    "json_SelectQueryResolver" : {
      "type" : "object",
      "title" : "SelectQueryResolver",
      "example" : { },
      "description" : ""
    }
    ,
    "json_SerializationDetails" : {
      "type" : "object",
      "title" : "SerializationDetails",
          "properties" : {
            "resourceUris" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "dateCreated" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "outputFormat" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "resourceUris" : [ "...", "..." ],
  "dateCreated" : 12345,
  "outputFormat" : "..."
},
      "description" : ""
    }
    ,
    "json_SerializerType" : {
      "type" : "string",
      "title" : "SerializerType",
          "enum" : [
            "AMCHARTS",
            "DENODO",
            "GCHARTS",
            "MTNA",
            "MTNA_SIMPLE",
            "PLOTLY_AREA",
            "PLOTLY_BAR",
            "PLOTLY_BOXPLOT",
            "PLOTLY_BUBBLE",
            "PLOTLY_HIST",
            "PLOTLY_H_BAR",
            "PLOTLY_H_HIST",
            "PLOTLY_LINE",
            "PLOTLY_PIE",
            "PLOTLY_SCATTER",
            "PLOTLY_TS",
            "TABLEAU"
          ],
      "description" : ""
    }
    ,
    "json_ServiceType" : {
      "type" : "string",
      "title" : "ServiceType",
          "enum" : [
            "SELECT",
            "STATISTICS",
            "TABULATE",
            "PACKAGE"
          ],
      "description" : ""
    }
    ,
    "json_SimplifiedDataSet" : {
      "type" : "object",
      "title" : "SimplifiedDataSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RdsFormattedData"
        },
        {
          "properties" : {
            "variables" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Variable"
}
            },
            "info" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataSetInformation"
            },
            "records" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "totals" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "variables" : [ {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  }, {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  } ],
  "info" : {
    "columnOffset" : 12345,
    "rowLimit" : 12345,
    "columnCount" : 12345,
    "notes" : [ "...", "..." ],
    "moreRows" : true,
    "columnLimit" : 12345,
    "moreColumns" : true,
    "rowCount" : 12345,
    "rowOffset" : 12345
  },
  "records" : [ { }, { } ],
  "totals" : [ { }, { } ]
},
      "description" : ""
    }
    ,
    "json_SocrataParameters" : {
      "type" : "object",
      "title" : "SocrataParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSourceParameters"
        },
        {
          "properties" : {
            "clientDomainUrl" : {
            "readOnly" : false,
"description" : "The URL / domain that holds the data set.",
"type" : "string"
            },
            "dataSetId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SocrataReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "clientDomainUrl" : "...",
  "dataSetId" : "...",
  "readerConfiguration" : {
    "clientDomainUrl" : "...",
    "dataSetId" : "...",
    "columnResolver" : { },
    "queryResolver" : { },
    "query" : {
      "columns" : [ { }, { } ],
      "weights" : [ { }, { } ],
      "queryOptions" : { },
      "totalColumnCount" : 12345,
      "isResolved" : true,
      "id" : "..."
    },
    "queryInput" : {
      "selectQuery" : { },
      "variables" : [ { }, { } ]
    },
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "$type" : "SOCRATA"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_SocrataReaderConfiguration" : {
      "type" : "object",
      "title" : "SocrataReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_QueryableReaderConfiguration"
        },
        {
          "properties" : {
            "clientDomainUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataSetId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "clientDomainUrl" : "...",
  "dataSetId" : "...",
  "columnResolver" : { },
  "queryResolver" : { },
  "query" : {
    "columns" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "weights" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "queryOptions" : {
      "orderBy" : {
        "property1" : "DESC",
        "property2" : "DESC"
      },
      "columnLimit" : 12345,
      "requiresSubQuery" : true,
      "offset" : 12345,
      "limit" : 12345,
      "distinct" : true,
      "includeTotals" : true,
      "count" : true,
      "relationalOperator" : "NE",
      "where" : { },
      "columnOffset" : 12345,
      "groupBy" : [ "...", "..." ]
    },
    "totalColumnCount" : 12345,
    "isResolved" : true,
    "id" : "..."
  },
  "queryInput" : {
    "selectQuery" : {
      "weights" : [ { }, { } ],
      "id" : "...",
      "totalColumnCount" : 12345,
      "queryOptions" : { },
      "columns" : [ { }, { } ],
      "isResolved" : true
    },
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ]
  },
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_SpssDatasetSerializer" : {
      "type" : "object",
      "title" : "SpssDatasetSerializer",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ScriptDatasetSerializer"
        },
        {
          "properties" : {
            "fileEnding" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classificationSerializer" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ScriptClassificationSerializer"
            },
            "fixedDataHeader" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "listEnd" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "fileEnding" : "...",
  "classificationSerializer" : {
    "classificationSectionHeader" : "..."
  },
  "fixedDataHeader" : "...",
  "listEnd" : "..."
},
      "description" : ""
    }
    ,
    "json_SpssOptions" : {
      "type" : "object",
      "title" : "SpssOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "SPSS Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "TIME",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BIG_INTEGER",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "METADATA"
},
      "description" : ""
    }
    ,
    "json_SpssParameters" : {
      "type" : "object",
      "title" : "SpssParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FileBasedParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataReaderConfigurationImpl"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "SPSS"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_SqlDataSetSerializer" : {
      "type" : "object",
      "title" : "SqlDataSetSerializer",
      "example" : { },
      "description" : ""
    }
    ,
    "json_SqlOptions" : {
      "type" : "object",
      "title" : "SqlOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
          "properties" : {
            "fileExtension" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "fileExtension" : "...",
  "formatType" : "SQL Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "INTEGER",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BYTE_ARRAY",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DATA"
},
      "description" : ""
    }
    ,
    "json_SqlParameters" : {
      "type" : "object",
      "title" : "SqlParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSourceParameters"
        },
        {
          "properties" : {
            "tableName" : {
            "readOnly" : false,
"description" : "The name of the data base table.",
"type" : "string"
            },
            "dataSourceType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_QueryableDataSourceType"
            },
            "user" : {
            "readOnly" : false,
"description" : "The user that has authorization to access or create the table.",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "The password for the provided user.",
"type" : "string"
            },
            "connectionString" : {
            "readOnly" : false,
"description" : "The JDBC connection string for the database.",
"type" : "string"
            },
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SqlReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "tableName" : "...",
  "dataSourceType" : "MICROSOFT",
  "user" : "...",
  "password" : "...",
  "connectionString" : "...",
  "readerConfiguration" : {
    "description" : "...",
    "type" : "...",
    "password" : "...",
    "connectionString" : "...",
    "name" : "...",
    "user" : "...",
    "id" : "...",
    "tableName" : "...",
    "columnResolver" : { },
    "queryResolver" : { },
    "query" : {
      "columns" : [ { }, { } ],
      "weights" : [ { }, { } ],
      "queryOptions" : { },
      "totalColumnCount" : 12345,
      "isResolved" : true,
      "id" : "..."
    },
    "queryInput" : {
      "selectQuery" : { },
      "variables" : [ { }, { } ]
    },
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "$type" : "SQL"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_SqlReaderConfiguration" : {
      "type" : "object",
      "title" : "SqlReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_QueryableReaderConfiguration"
        },
        {
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "connectionString" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "user" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tableName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "description" : "...",
  "type" : "...",
  "password" : "...",
  "connectionString" : "...",
  "name" : "...",
  "user" : "...",
  "id" : "...",
  "tableName" : "...",
  "columnResolver" : { },
  "queryResolver" : { },
  "query" : {
    "columns" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "weights" : [ {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    }, {
      "concept" : true,
      "regex" : true,
      "propertyFilters" : {
        "property1" : [ "...", "..." ],
        "property2" : [ "...", "..." ]
      },
      "variableGroup" : true,
      "named" : true,
      "exclusion" : true,
      "keyword" : true,
      "value" : "...",
      "unit" : true,
      "computation" : true,
      "subQueryOnly" : true,
      "dataType" : "...",
      "requiresSubQuery" : true,
      "columnName" : "...",
      "recode" : true,
      "measure" : true
    } ],
    "queryOptions" : {
      "orderBy" : {
        "property1" : "DESC",
        "property2" : "DESC"
      },
      "columnLimit" : 12345,
      "requiresSubQuery" : true,
      "offset" : 12345,
      "limit" : 12345,
      "distinct" : true,
      "includeTotals" : true,
      "count" : true,
      "relationalOperator" : "LE",
      "where" : { },
      "columnOffset" : 12345,
      "groupBy" : [ "...", "..." ]
    },
    "totalColumnCount" : 12345,
    "isResolved" : true,
    "id" : "..."
  },
  "queryInput" : {
    "selectQuery" : {
      "weights" : [ { }, { } ],
      "id" : "...",
      "totalColumnCount" : 12345,
      "queryOptions" : { },
      "columns" : [ { }, { } ],
      "isResolved" : true
    },
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ]
  },
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "dateConfiguration" : {
    "requiresYearWrapping" : true,
    "yearWrappingVariance" : 12345,
    "dateFormatMap" : {
      "property1" : "...",
      "property2" : "..."
    }
  }
},
      "description" : ""
    }
    ,
    "json_SqlSerializationDetails" : {
      "type" : "object",
      "title" : "SqlSerializationDetails",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_SerializationDetails"
        },
        {
          "properties" : {
            "tableName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sqlSerializationDetails" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SqlSerializationDetails"
}
            }
          }
        }
      ],
      "example" : {
  "tableName" : "...",
  "sqlSerializationDetails" : [ {
    "tableName" : "...",
    "sqlSerializationDetails" : [ { }, { } ],
    "resourceUris" : [ "...", "..." ],
    "dateCreated" : 12345,
    "outputFormat" : "..."
  }, {
    "tableName" : "...",
    "sqlSerializationDetails" : [ { }, { } ],
    "resourceUris" : [ "...", "..." ],
    "dateCreated" : 12345,
    "outputFormat" : "..."
  } ],
  "resourceUris" : [ "...", "..." ],
  "dateCreated" : 12345,
  "outputFormat" : "..."
},
      "description" : ""
    }
    ,
    "json_StackTraceElement" : {
      "type" : "object",
      "title" : "StackTraceElement",
          "properties" : {
            "methodName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "nativeMethod" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "lineNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "className" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "methodName" : "...",
  "fileName" : "...",
  "nativeMethod" : true,
  "lineNumber" : 12345,
  "className" : "..."
},
      "description" : ""
    }
    ,
    "json_StataDatasetSerializer" : {
      "type" : "object",
      "title" : "StataDatasetSerializer",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ScriptDatasetSerializer"
        },
        {
          "properties" : {
            "classificationSerializer" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ScriptClassificationSerializer"
            },
            "fileEnding" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fixedDataHeader" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "classificationSerializer" : {
    "classificationSectionHeader" : "..."
  },
  "fileEnding" : "...",
  "fixedDataHeader" : "..."
},
      "description" : ""
    }
    ,
    "json_StataOptions" : {
      "type" : "object",
      "title" : "StataOptions",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DataSetSerializerOptionSet"
        },
        {
        }
      ],
      "example" : {
  "formatType" : "Stata Options",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "CHAR",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BOOLEAN",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "METADATA"
},
      "description" : ""
    }
    ,
    "json_StataParameters" : {
      "type" : "object",
      "title" : "StataParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FileBasedParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_DataReaderConfigurationImpl"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "STATA"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "json_StatisticalSet" : {
      "type" : "object",
      "title" : "StatisticalSet",
          "properties" : {
            "dateProduced" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "dateProduced" : 12345
},
      "description" : ""
    }
    ,
    "json_StatisticsQueryDescriptor" : {
      "type" : "object",
      "title" : "StatisticsQueryDescriptor",
          "properties" : {
            "apiCall" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "apiCall" : "...",
  "name" : "...",
  "description" : "..."
},
      "description" : ""
    }
    ,
    "json_SummaryStatisticSet" : {
      "type" : "object",
      "title" : "SummaryStatisticSet",
          "properties" : {
            "median" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "max" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "kurtosis" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "distinct" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userMissing" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "populated" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "weights" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "standardDeviation" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "distinctSet" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "weighted" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "min" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "mean" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "variance" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "missing" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "skewness" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "median" : 12345.0,
  "max" : 12345.0,
  "kurtosis" : 12345.0,
  "distinct" : 12345.0,
  "userMissing" : 12345.0,
  "populated" : 12345.0,
  "weights" : [ "...", "..." ],
  "standardDeviation" : 12345.0,
  "distinctSet" : [ { }, { } ],
  "weighted" : true,
  "min" : 12345.0,
  "mean" : 12345.0,
  "variance" : 12345.0,
  "missing" : 12345.0,
  "skewness" : 12345.0
},
      "description" : ""
    }
    ,
    "json_SummaryStatistics" : {
      "type" : "object",
      "title" : "SummaryStatistics",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_StatisticalSet"
        },
        {
          "properties" : {
            "sets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_SummaryStatisticSet"
}
            }
          }
        }
      ],
      "example" : {
  "sets" : [ {
    "median" : 12345.0,
    "max" : 12345.0,
    "kurtosis" : 12345.0,
    "distinct" : 12345.0,
    "userMissing" : 12345.0,
    "populated" : 12345.0,
    "weights" : [ "...", "..." ],
    "standardDeviation" : 12345.0,
    "distinctSet" : [ { }, { } ],
    "weighted" : true,
    "min" : 12345.0,
    "mean" : 12345.0,
    "variance" : 12345.0,
    "missing" : 12345.0,
    "skewness" : 12345.0
  }, {
    "median" : 12345.0,
    "max" : 12345.0,
    "kurtosis" : 12345.0,
    "distinct" : 12345.0,
    "userMissing" : 12345.0,
    "populated" : 12345.0,
    "weights" : [ "...", "..." ],
    "standardDeviation" : 12345.0,
    "distinctSet" : [ { }, { } ],
    "weighted" : true,
    "min" : 12345.0,
    "mean" : 12345.0,
    "variance" : 12345.0,
    "missing" : 12345.0,
    "skewness" : 12345.0
  } ],
  "dateProduced" : 12345
},
      "description" : ""
    }
    ,
    "json_Throwable" : {
      "type" : "object",
      "title" : "Throwable",
          "properties" : {
            "cause" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Throwable"
            },
            "suppressed" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Throwable"
}
            },
            "message" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "stackTrace" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_StackTraceElement"
}
            },
            "localizedMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "cause" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "suppressed" : [ {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  }, {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  } ],
  "message" : "...",
  "stackTrace" : [ {
    "methodName" : "...",
    "fileName" : "...",
    "nativeMethod" : true,
    "lineNumber" : 12345,
    "className" : "..."
  }, {
    "methodName" : "...",
    "fileName" : "...",
    "nativeMethod" : true,
    "lineNumber" : 12345,
    "className" : "..."
  } ],
  "localizedMessage" : "..."
},
      "description" : ""
    }
    ,
    "json_Unit" : {
      "type" : "object",
      "title" : "Unit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_DatumGroup"
        },
        {
        }
      ],
      "example" : {
  "id" : "...",
  "data" : [ {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  }, {
    "variable" : {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    },
    "value" : { }
  } ]
},
      "description" : ""
    }
    ,
    "json_Variable" : {
      "type" : "object",
      "title" : "Variable",
          "properties" : {
            "disclosive" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "index" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "format" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "frequencies" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Frequencies"
            },
            "classificationUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "measure" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "classification" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Classification"
            },
            "decimals" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "fixedStorageWidth" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "endPosition" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "synonyms" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "required" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "weight" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "startPosition" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "questionText" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "synonymCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "storageType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "summaryStatistics" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SummaryStatistics"
            },
            "computation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Computation"
            }
          },
      "example" : {
  "disclosive" : true,
  "index" : 12345,
  "format" : "...",
  "dataType" : "...",
  "frequencies" : {
    "sets" : [ {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    }, {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    } ],
    "dateProduced" : 12345
  },
  "classificationUri" : "...",
  "measure" : true,
  "classification" : {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  },
  "decimals" : 12345,
  "fixedStorageWidth" : 12345,
  "endPosition" : 12345,
  "synonyms" : [ "...", "..." ],
  "required" : true,
  "weight" : true,
  "startPosition" : 12345,
  "questionText" : "...",
  "synonymCount" : 12345,
  "storageType" : "...",
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  },
  "computation" : {
    "computationExpressionCount" : 12345,
    "computationExpressions" : [ "...", "..." ],
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "variableCount" : 12345
  }
},
      "description" : ""
    }
    ,
    "json_VariableGroup" : {
      "type" : "object",
      "title" : "VariableGroup",
          "properties" : {
            "purpose" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cardinality" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Cardinality"
            },
            "variableCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "variables" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Variable"
}
            }
          },
      "example" : {
  "purpose" : "...",
  "cardinality" : "MANY",
  "variableCount" : 12345,
  "variables" : [ {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  }, {
    "disclosive" : true,
    "index" : 12345,
    "format" : "...",
    "dataType" : "...",
    "frequencies" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "classificationUri" : "...",
    "measure" : true,
    "classification" : {
      "rootCodeCount" : 12345,
      "levels" : [ { }, { } ],
      "levelCount" : 12345,
      "codes" : [ { }, { } ]
    },
    "decimals" : 12345,
    "fixedStorageWidth" : 12345,
    "endPosition" : 12345,
    "synonyms" : [ "...", "..." ],
    "required" : true,
    "weight" : true,
    "startPosition" : 12345,
    "questionText" : "...",
    "synonymCount" : 12345,
    "storageType" : "...",
    "summaryStatistics" : {
      "sets" : [ { }, { } ],
      "dateProduced" : 12345
    },
    "computation" : {
      "computationExpressionCount" : 12345,
      "computationExpressions" : [ "...", "..." ],
      "variables" : [ { }, { } ],
      "variableCount" : 12345
    }
  } ]
},
      "description" : ""
    }
    ,
    "json_VariableSummary" : {
      "type" : "object",
      "title" : "VariableSummary",
          "properties" : {
            "keywords" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "index" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classificationId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "storageType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classificationUri" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "questionText" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "name" : "...",
  "label" : "...",
  "index" : 12345,
  "id" : "...",
  "classificationId" : "...",
  "dataType" : "...",
  "storageType" : "...",
  "uri" : "...",
  "classificationUri" : "...",
  "questionText" : "..."
},
      "description" : ""
    }
    ,
    "json_Version" : {
      "type" : "object",
      "title" : "Version",
          "properties" : {
            "versionDate" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "versionNumber" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VersionNumber"
            }
          },
      "example" : {
  "versionDate" : 12345,
  "versionNumber" : {
    "major" : 12345,
    "minor" : 12345,
    "release" : 12345
  }
},
      "description" : ""
    }
    ,
    "json_VersionNumber" : {
      "type" : "object",
      "title" : "VersionNumber",
          "properties" : {
            "major" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "minor" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "release" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "major" : 12345,
  "minor" : 12345,
  "release" : 12345
},
      "description" : ""
    }
    ,
    "json_XptParameters" : {
      "type" : "object",
      "title" : "XptParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_MultiDataSetFileParameters"
        },
        {
          "properties" : {
            "readerConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MultiDataSetReaderConfiguration"
            }
          }
        }
      ],
      "example" : {
  "readerConfiguration" : {
    "selectedDataSet" : "...",
    "availableDataSets" : [ "...", "..." ],
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "selectedDataSet" : "...",
  "availableDataSets" : [ "...", "..." ],
  "fileInformation" : {
    "contentType" : "...",
    "fileName" : "...",
    "fileKey" : "...",
    "fileSize" : 12345
  },
  "$type" : "XPT"
},
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "xml_ns0_instant" : {
      "type" : "object",
      "title" : "instant",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_offsetDateTime" : {
      "type" : "object",
      "title" : "offsetDateTime",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_zonedDateTime" : {
      "type" : "object",
      "title" : "zonedDateTime",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_queryInput" : {
      "type" : "object",
      "title" : "queryInput",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_queryOptions" : {
      "type" : "object",
      "title" : "queryOptions",
      "allOf" : [
        {
          "properties" : {
            "columnLimit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "columnOffset" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "count" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "distinct" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "groupBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "includeTotals" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "limit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "offset" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "orderBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "relationalOperator" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_relationalOperator"
            },
            "requiresSubQuery" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "where" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_column" : {
      "type" : "object",
      "title" : "column",
      "allOf" : [
        {
          "properties" : {
            "columnName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "computation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "measure" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "recode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "requiresSubQuery" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "subQueryOnly" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "unit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_conceptualColumn" : {
      "type" : "object",
      "title" : "conceptualColumn",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_column"
        },
        {
          "properties" : {
            "concept" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "exclusion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "keyword" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "named" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "propertyFilters" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "regex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "variableGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_order" : {
      "type" : "string",
      "title" : "order",
          "enum" : [
            "ASC",
            "DESC"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_logicalComponent" : {
      "type" : "object",
      "title" : "logicalComponent",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_conceptualSelectQuery" : {
      "type" : "object",
      "title" : "conceptualSelectQuery",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_selectQueryImpl"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataSelectQuery" : {
      "type" : "object",
      "title" : "dataSelectQuery",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_conceptualSelectQuery"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_selectQueryImpl" : {
      "type" : "object",
      "title" : "selectQueryImpl",
      "allOf" : [
        {
          "properties" : {
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_column"
}
            },
            "isResolved" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "queryOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_queryOptions"
            },
            "totalColumnCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "weights" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_column"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_columnResolver" : {
      "type" : "object",
      "title" : "columnResolver",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_selectQueryResolver" : {
      "type" : "object",
      "title" : "selectQueryResolver",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_serializationDetails" : {
      "type" : "object",
      "title" : "serializationDetails",
      "allOf" : [
        {
          "properties" : {
            "dateCreated" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_zonedDateTime"
            },
            "outputFormat" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceUris" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_processStatusDetail" : {
      "type" : "object",
      "title" : "processStatusDetail",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataSet" : {
      "type" : "object",
      "title" : "dataSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_resourceImpl"
        },
        {
          "properties" : {
            "classifications" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "dataSetInformation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_dataSetInformation"
            },
            "location" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pointMeasure" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "pointUnit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recordLayout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "recordMeasure" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "recordUnit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataSetInformation" : {
      "type" : "object",
      "title" : "dataSetInformation",
      "allOf" : [
        {
          "properties" : {
            "columnCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "columnLimit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "columnOffset" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "moreColumns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "moreRows" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "notes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "rowCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "rowLimit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "rowOffset" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_formattedDataSet" : {
      "type" : "object",
      "title" : "formattedDataSet",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_relationalOperator" : {
      "type" : "string",
      "title" : "relationalOperator",
          "enum" : [
            "GE",
            "LE",
            "NE",
            "EQ",
            "GT",
            "LT",
            "LIKE",
            "MATCHES",
            "NOT_NULL"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_dateConfiguration" : {
      "type" : "object",
      "title" : "dateConfiguration",
      "allOf" : [
        {
          "properties" : {
            "requiresYearWrapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "yearWrappingVariance" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataReaderConfigurationImpl" : {
      "type" : "object",
      "title" : "dataReaderConfigurationImpl",
      "allOf" : [
        {
          "properties" : {
            "dateConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_dateConfiguration"
            },
            "recordLayout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_queryableReaderConfiguration" : {
      "type" : "object",
      "title" : "queryableReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_dataReaderConfigurationImpl"
        },
        {
          "properties" : {
            "columnResolver" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "query" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_dataSelectQuery"
            },
            "queryInput" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_queryInput"
            },
            "queryResolver" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_sqlReaderConfiguration" : {
      "type" : "object",
      "title" : "sqlReaderConfiguration",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_queryableReaderConfiguration"
        },
        {
          "properties" : {
            "connectionString" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tableName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_cardinality" : {
      "type" : "string",
      "title" : "cardinality",
          "enum" : [
            "ZERO",
            "ONE",
            "MANY"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_codeDataType" : {
      "type" : "string",
      "title" : "codeDataType",
          "enum" : [
            "ALPHA",
            "ALPHA_NUMERIC",
            "NUMERIC",
            "NUMERIC_ALPHA"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_referenceDocumentation" : {
      "type" : "object",
      "title" : "referenceDocumentation",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_versionNumber" : {
      "type" : "object",
      "title" : "versionNumber",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_frequencies" : {
      "type" : "object",
      "title" : "frequencies",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_statisticalSet"
        },
        {
          "properties" : {
            "sets" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_frequencySet"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_frequencySet" : {
      "type" : "object",
      "title" : "frequencySet",
      "allOf" : [
        {
          "properties" : {
            "map" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "weighted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "weights" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_statisticalSet" : {
      "type" : "object",
      "title" : "statisticalSet",
      "allOf" : [
        {
          "properties" : {
            "dateProduced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_offsetDateTime"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_summaryStatisticSet" : {
      "type" : "object",
      "title" : "summaryStatisticSet",
      "allOf" : [
        {
          "properties" : {
            "distinct" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "distinctSet" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "kurtosis" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "max" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "mean" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "median" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "min" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "missing" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "populated" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "skewness" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "standardDeviation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "userMissing" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "variance" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "number",
"format" : "double"
            },
            "weighted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "weights" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_summaryStatistics" : {
      "type" : "object",
      "title" : "summaryStatistics",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_statisticalSet"
        },
        {
          "properties" : {
            "sets" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_summaryStatisticSet"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_formattedFrequencySet" : {
      "type" : "object",
      "title" : "formattedFrequencySet",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_sqlSerializationDetails" : {
      "type" : "object",
      "title" : "sqlSerializationDetails",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_serializationDetails"
        },
        {
          "properties" : {
            "sqlSerializationDetails" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_sqlSerializationDetails"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resource" : {
      "type" : "object",
      "title" : "resource",
      "allOf" : [
        {
          "properties" : {
            "uri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resourceImpl" : {
      "type" : "object",
      "title" : "resourceImpl",
      "allOf" : [
        {
          "properties" : {
            "uri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_customPropertyUsage" : {
      "type" : "object",
      "title" : "customPropertyUsage",
      "allOf" : [
        {
          "properties" : {
            "defining" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "maxOccurs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "minOccurs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "propertyRepresentation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "repeatable" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_classification" : {
      "type" : "object",
      "title" : "classification",
      "allOf" : [
        {
          "properties" : {
            "codes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "levelCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "levels" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "rootCodeCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_classificationSummary" : {
      "type" : "object",
      "title" : "classificationSummary",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_code" : {
      "type" : "object",
      "title" : "code",
      "allOf" : [
        {
          "properties" : {
            "category" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "childCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "childUris" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "codeValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "parent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "residual" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "reverseTranslationAidCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "reverseTranslationAids" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_referenceDocumentation"
}
            },
            "sinceVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "synonymCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "synonyms" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "translationAidCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "translationAids" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_referenceDocumentation"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_level" : {
      "type" : "object",
      "title" : "level",
      "allOf" : [
        {
          "properties" : {
            "categorySetUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "categorySetUriUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "codeCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "codeDataType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_codeDataType"
            },
            "codePattern" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "codes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "conceptUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "conceptUriUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "depth" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_category" : {
      "type" : "object",
      "title" : "category",
      "allOf" : [
        {
          "properties" : {
            "concept" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "residual" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "synonymCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "synonyms" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_categorySet" : {
      "type" : "object",
      "title" : "categorySet",
      "allOf" : [
        {
          "properties" : {
            "categoryCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "categorys" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "customProperties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "customPropertyCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "topConcept" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_concept" : {
      "type" : "object",
      "title" : "concept",
      "allOf" : [
        {
          "properties" : {
            "broaderConceptCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "broaderConcepts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "customProperties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "customPropertyCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "definitionSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "narrowerConceptCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "narrowerConcepts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "relatedConceptCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "relatedConcepts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "synonymCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "synonyms" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_fileInformation" : {
      "type" : "object",
      "title" : "fileInformation",
      "allOf" : [
        {
          "properties" : {
            "contentType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_computation" : {
      "type" : "object",
      "title" : "computation",
      "allOf" : [
        {
          "properties" : {
            "computationExpressionCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "computationExpressions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "variableCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "variables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_recordLayout" : {
      "type" : "object",
      "title" : "recordLayout",
      "allOf" : [
        {
          "properties" : {
            "layoutVariableCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "primaryKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "variables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_variable" : {
      "type" : "object",
      "title" : "variable",
      "allOf" : [
        {
          "properties" : {
            "classification" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "classificationUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "computation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "decimals" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "disclosive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "endPosition" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "fixedStorageWidth" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "format" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "frequencies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_frequencies"
            },
            "index" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "measure" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "questionText" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "required" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "startPosition" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "storageType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "summaryStatistics" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_summaryStatistics"
            },
            "synonymCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "synonyms" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "weight" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_variableGroup" : {
      "type" : "object",
      "title" : "variableGroup",
      "allOf" : [
        {
          "properties" : {
            "cardinality" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_cardinality"
            },
            "purpose" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "variableCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "variables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_version" : {
      "type" : "object",
      "title" : "version",
      "allOf" : [
        {
          "properties" : {
            "versionDate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_offsetDateTime"
            },
            "versionNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_versionNumber"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_serviceType" : {
      "type" : "string",
      "title" : "serviceType",
          "enum" : [
            "SELECT",
            "STATISTICS",
            "TABULATE",
            "PACKAGE"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_formattedFrequencies" : {
      "type" : "object",
      "title" : "formattedFrequencies",
      "allOf" : [
        {
          "properties" : {
            "sets" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsDataSetInformation" : {
      "type" : "object",
      "title" : "rdsDataSetInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_dataSetInformation"
        },
        {
          "properties" : {
            "cached" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "end" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "format" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_serializerType"
            },
            "includeMetadata" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "postQueryTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "preQueryTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "queryTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "start" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalProcessingTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsFormattedData" : {
      "type" : "object",
      "title" : "rdsFormattedData",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_simplifiedDataSet" : {
      "type" : "object",
      "title" : "simplifiedDataSet",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_amChartsData" : {
      "type" : "object",
      "title" : "amChartsData",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_googleChartsData" : {
      "type" : "object",
      "title" : "googleChartsData",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_plotlyBar" : {
      "type" : "object",
      "title" : "plotlyBar",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : "Handles vertical and horizontal bar charts. Assumes tabulated data with a\nsingle measure and a single dimension.\n\nExamples of valid json: var data = [ { x: ['giraffes', 'orangutans',\n'monkeys'], y: [20, 14, 23], type: 'bar' } ]; var data = [{ type: 'bar', x:\n[20, 14, 23], y: ['giraffes', 'orangutans', 'monkeys'], orientation: 'h' }]"
    }
    ,
    "xml_ns0_plotlyBoxPlot" : {
      "type" : "object",
      "title" : "plotlyBoxPlot",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : "Assumes data with a single datum.\n\nExample: var data = [ { y: [0, 1, 1, 2, 3, 5, 8, 13, 21], boxpoints: 'all',\njitter: 0.3, pointpos: -1.8, type: 'box' } ]"
    }
    ,
    "xml_ns0_plotlyBubble" : {
      "type" : "object",
      "title" : "plotlyBubble",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : "Assumes data with two datum.\n\nvar trace1 = { x: [1, 2, 3, 4], y: [10, 11, 12, 13], mode: 'markers', marker:\n{ size: [10, 10, 10, 10] } }"
    }
    ,
    "xml_ns0_plotlyHistogram" : {
      "type" : "object",
      "title" : "plotlyHistogram",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : "Handles vertical and horizontal histograms.Assume we have one data point\n\nExamples: var trace1 = { x: x0, opacity: 0.75, type: 'histogram' }; var\ntrace2 = { x: x1, opacity: 0.75, type: 'histogram' }\n\nvar data = [ { x: [1,2,3], type: 'histogram' } ]; var data = [ { y: [1,2,3],\ntype: 'histogram' } ]"
    }
    ,
    "xml_ns0_plotlyPie" : {
      "type" : "object",
      "title" : "plotlyPie",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_plotlyScatter" : {
      "type" : "object",
      "title" : "plotlyScatter",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rdsFormattedData"
        },
        {
        }
      ],
      "description" : "Used for area, line, and scatter charts. Assumes data with two datum.\n\nExamples of json structure this should follow: var trace1 = { x: [1, 2, 3,\n4], y: [10, 15, 13, 17], type: 'scatter' }\n\nvar trace1 = { x: [1, 2, 3, 4], y: [0, 2, 3, 5], fill: 'tozeroy', type:\n'scatter' }"
    }
    ,
    "xml_ns0_errorMessage" : {
      "type" : "object",
      "title" : "errorMessage",
      "allOf" : [
        {
          "properties" : {
            "code" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "errors" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "resolutions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_serializerType" : {
      "type" : "string",
      "title" : "serializerType",
          "enum" : [
            "AMCHARTS",
            "DENODO",
            "GCHARTS",
            "MTNA",
            "MTNA_SIMPLE",
            "PLOTLY_AREA",
            "PLOTLY_BAR",
            "PLOTLY_BOXPLOT",
            "PLOTLY_BUBBLE",
            "PLOTLY_HIST",
            "PLOTLY_H_BAR",
            "PLOTLY_H_HIST",
            "PLOTLY_LINE",
            "PLOTLY_PIE",
            "PLOTLY_SCATTER",
            "PLOTLY_TS",
            "TABLEAU"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsCatalog" : {
      "type" : "object",
      "title" : "rdsCatalog",
      "allOf" : [
        {
          "properties" : {
            "catalogCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "catalogs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rdsCatalog"
}
            },
            "dataProductCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "dataProducts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rdsDataProduct"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "documentation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "exclusion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isPrivate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "keywordCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "keywords" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastUpdate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_offsetDateTime"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "urls" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsDataProduct" : {
      "type" : "object",
      "title" : "rdsDataProduct",
      "allOf" : [
        {
          "properties" : {
            "dataSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rdsDataSource"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "documentation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "exclusion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isPrivate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "keywordCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "keywords" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastUpdate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_offsetDateTime"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "urlCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "urls" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsDataSource" : {
      "type" : "object",
      "title" : "rdsDataSource",
      "allOf" : [
        {
          "properties" : {
            "configuration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_dataSourceParameters"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "purpose" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "target" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_sqlParameters"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataSetMetadata" : {
      "type" : "object",
      "title" : "dataSetMetadata",
      "allOf" : [
        {
          "properties" : {
            "classifications" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "recordLayout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_metadataServiceCompletionDetails" : {
      "type" : "object",
      "title" : "metadataServiceCompletionDetails",
      "allOf" : [
        {
          "properties" : {
            "ended" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_instant"
            },
            "started" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_instant"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsFormattedVariableProfile" : {
      "type" : "object",
      "title" : "rdsFormattedVariableProfile",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_packagingFormat" : {
      "type" : "object",
      "title" : "packagingFormat",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_option" : {
      "type" : "object",
      "title" : "option",
      "allOf" : [
        {
          "properties" : {
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "A data type for front end clients to use to determine how to present the\noption to the end user.",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Describes the purpose and intended use of the option. This is typically\nwhat should be displayed to the user.",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The name of the option. This is used to identify it when it is processed\nand should not be changed.",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "An array of possible values for the user to choose from.",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "required" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Indicates whether or not this option must be filled out and returned.",
"type" : "boolean"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The value of the option",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_optionSet" : {
      "type" : "object",
      "title" : "optionSet",
      "allOf" : [
        {
          "properties" : {
            "format" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The packaging format ID, to link to the packaging format and access its\ndescription and name.",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The instance ID of this option set, used to uniquely identify the option\nset.",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The options that can be configured to customize the output.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_option"
}
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_optionType"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_optionType" : {
      "type" : "string",
      "title" : "optionType",
          "enum" : [
            "DATA",
            "DOCUMENT",
            "METADATA",
            "SCRIPT"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_packagingOptions" : {
      "type" : "object",
      "title" : "packagingOptions",
      "allOf" : [
        {
          "properties" : {
            "data" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "documents" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "metadata" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "scripts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_optionBundle" : {
      "type" : "object",
      "title" : "optionBundle",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_packagingCompletionDetails" : {
      "type" : "object",
      "title" : "packagingCompletionDetails",
      "allOf" : [
        {
          "properties" : {
            "detailsList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_sqlSerializationDetails"
}
            },
            "infoList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_statisticsQueryDescriptor" : {
      "type" : "object",
      "title" : "statisticsQueryDescriptor",
      "allOf" : [
        {
          "properties" : {
            "apiCall" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsCatalogStatistics" : {
      "type" : "object",
      "title" : "rdsCatalogStatistics",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "productStatistics" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rdsDataProductStatistics"
}
            },
            "queriesOverTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalQueries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rdsDataProductStatistics" : {
      "type" : "object",
      "title" : "rdsDataProductStatistics",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "popularColumns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "popularColumnsByService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "popularFilters" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "popularFiltersByService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "queriesOverTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "queriesOverTimeByService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalQueries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataSourceParameters" : {
      "type" : "object",
      "title" : "dataSourceParameters",
      "allOf" : [
        {
        }
      ],
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "xml_ns0_sqlParameters" : {
      "type" : "object",
      "title" : "sqlParameters",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_dataSourceParameters"
        },
        {
          "properties" : {
            "connectionString" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The JDBC connection string for the database.",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The password for the provided user.",
"type" : "string"
            },
            "tableName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The name of the data base table.",
"type" : "string"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "The user that has authorization to access or create the table.",
"type" : "string"
            }
          }
        }
      ],
      "description" : "A simpler and more lightweight version of a\nDataReaderDefinitionImpl's DataReaderConfiguration. Used to\nquickly move configuration properties from what the user inputed to the\nstored DataReaderDefinitionImpl. Normal DataReaderConfigurations could be\nused instead, but are not optimal as they normally contain additional\nproperties the user should not be held accountable for s(i.e. record layouts\nor file managers)."
    }
    ,
    "xml_ns0_configurationSummary" : {
      "type" : "object",
      "title" : "configurationSummary",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_variableSummary" : {
      "type" : "object",
      "title" : "variableSummary",
      "allOf" : [
        {
          "properties" : {
            "classificationId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classificationUri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "index" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "keywords" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "questionText" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "storageType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uri" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/_files/download" : {
      "get" : {
        "tags" : [ "FileController" ],
        "description" : "",
        "operationId" : "downloadFile",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "contentType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "fileName",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "key",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "status",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "FileController" ],
        "description" : "",
        "operationId" : "downloadFile2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "status",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_FileInformation"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/_files/upload" : {
      "post" : {
        "tags" : [ "FileController" ],
        "description" : "",
        "operationId" : "uploadFile",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "file",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_FileInformation"
            },
            "examples" : {
  "contentType" : "...",
  "fileName" : "...",
  "fileKey" : "...",
  "fileSize" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/api/catalog/" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get the root catalog of the system.",
        "description" : "Get the root catalog of the system. This will hold a list of all the\ncatalogs and data products that are available on this server. This would\nideally be used to power an entry point into an application. The catalog\nprovides a starting point for users to view what is available to them and\ndrill down into a catalog or data product of their interest. The catalogs\nand products may have descriptive metadata on them that is useful to\ndisplay.",
        "operationId" : "getCatalog",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RdsCatalog"
            },
            "examples" : {
  "urls" : [ "...", "..." ],
  "urlCount" : 12345,
  "isPrivate" : true,
  "dataProductCount" : 12345,
  "label" : "...",
  "dataProducts" : [ {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  }, {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  } ],
  "catalogCount" : 12345,
  "lastUpdate" : 12345,
  "exclusion" : "...",
  "name" : "...",
  "documentation" : "...",
  "catalogs" : [ {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  }, {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  } ],
  "keywordCount" : 12345,
  "id" : "...",
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "uri" : "..."
},
            "description" : "Catalog retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/import/{catalogId}/{dataProductId}" : {
      "post" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Import metadata.",
        "description" : "Import metadata. Imports metadata from a DDI codebook file into the data\nproduct, an administrative endpoint to perform a bulk update of a data\nproducts metadata.",
        "operationId" : "importMetadata",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "filedescid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to update with the file contents."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_FileInformation"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or file not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/import/{catalogId}/{dataProductId}/wrapper" : {
      "post" : {
        "tags" : [ "MetadataController" ],
        "description" : "",
        "operationId" : "importMetadataWrapper",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "filedescid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_DataSetMetadata"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog or data product not found."
          },
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/api/catalog/processdetails/{processId}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Check process status.",
        "description" : "Check process status. This is an administrative end point to view the\nstatus of a particular process that has been, or is currently running.",
        "operationId" : "getProcessDetails",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "processId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the process whose status is desired."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ProcessStatusDetailOfMetadataServiceCompletionDetails"
            },
            "examples" : {
  "status" : "CANCELLED",
  "completionDetails" : {
    "duration" : 12345,
    "started" : 12345,
    "ended" : 12345
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "completed" : 12345,
  "statusMessage" : "...",
  "id" : "..."
},
            "description" : "Variable retrieved successfully."
          },
          "404" : {
            "examples" : {
  "status" : "QUEUED",
  "completionDetails" : {
    "duration" : 12345,
    "started" : 12345,
    "ended" : 12345
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "completed" : 12345,
  "statusMessage" : "...",
  "id" : "..."
},
            "description" : "Process not found."
          }
        }
      }
    }
    ,
    "\/api/catalog/product/type/{key}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get configuration parameters.",
        "description" : "Get configuration parameters. This returns the parameters that need to be\nfilled out for the specified type of data product.",
        "operationId" : "getDataProductParameters",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The key of the type of data product to configure."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "tableName" : "...",
  "dataSourceType" : "SOCRATA",
  "user" : "...",
  "password" : "...",
  "connectionString" : "...",
  "readerConfiguration" : {
    "description" : "...",
    "type" : "...",
    "password" : "...",
    "connectionString" : "...",
    "name" : "...",
    "user" : "...",
    "id" : "...",
    "tableName" : "...",
    "columnResolver" : { },
    "queryResolver" : { },
    "query" : {
      "columns" : [ { }, { } ],
      "weights" : [ { }, { } ],
      "queryOptions" : { },
      "totalColumnCount" : 12345,
      "isResolved" : true,
      "id" : "..."
    },
    "queryInput" : {
      "selectQuery" : { },
      "variables" : [ { }, { } ]
    },
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "$type" : "SQL"
},
            "description" : "Configuration for type or key not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_SqlParameters"
            },
            "examples" : {
  "tableName" : "...",
  "dataSourceType" : "ORACLE",
  "user" : "...",
  "password" : "...",
  "connectionString" : "...",
  "readerConfiguration" : {
    "description" : "...",
    "type" : "...",
    "password" : "...",
    "connectionString" : "...",
    "name" : "...",
    "user" : "...",
    "id" : "...",
    "tableName" : "...",
    "columnResolver" : { },
    "queryResolver" : { },
    "query" : {
      "columns" : [ { }, { } ],
      "weights" : [ { }, { } ],
      "queryOptions" : { },
      "totalColumnCount" : 12345,
      "isResolved" : true,
      "id" : "..."
    },
    "queryInput" : {
      "selectQuery" : { },
      "variables" : [ { }, { } ]
    },
    "recordLayout" : {
      "variables" : [ { }, { } ],
      "layoutVariableCount" : 12345,
      "primaryKey" : { }
    },
    "dateConfiguration" : {
      "requiresYearWrapping" : true,
      "yearWrappingVariance" : 12345,
      "dateFormatMap" : {
        "property1" : "...",
        "property2" : "..."
      }
    }
  },
  "$type" : "SQL"
},
            "description" : "configuration parameters retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/product/types" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get supported data product types.",
        "description" : "Get supported data product types. An administrative endpoint to display\nall the suppport types of files or databases that RDS can use to create a\ndata product. This will return a list of all the supported types. If any\nof the file types are used, they will be stored in a database (specified\nby the client or embedded in the application) in order to support\nqueries. Any metadata included in the file will be stored as well.",
        "operationId" : "getDataProductTypes",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ConfigurationSummary"
}
            },
            "examples" : {
  "key" : "DDI_CODEBOOK",
  "display" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/api/catalog/reindex" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Re-index metadata.",
        "description" : "Re-index metadata. Administrative end point that re-indexes the specified\ncatalog (or the root catalog if none is specified).",
        "operationId" : "reindexCatalog",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "the ID of the catalog to reindex, if NULL the root catalog\nwill be reindexed."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "The process ID",
"type" : "string"
            },
            "description" : "The process ID"
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}" : {
      "delete" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Delete catalog.",
        "description" : "Delete catalog. Deletes the specified catalog and any data products it\ncontains.",
        "operationId" : "deleteCatalog",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog to delete."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get catalog.",
        "description" : "Get catalog. Returns the specified catalog. This allows a more specific\nview of a catalog and its data products, it is a subset of the root\ncatalog and holds no additional information to what can be found in the\nbroader get catalog endpoint.",
        "operationId" : "getSubCatalog",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog to retrieve."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "urls" : [ "...", "..." ],
  "urlCount" : 12345,
  "isPrivate" : true,
  "dataProductCount" : 12345,
  "label" : "...",
  "dataProducts" : [ {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  }, {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  } ],
  "catalogCount" : 12345,
  "lastUpdate" : 12345,
  "exclusion" : "...",
  "name" : "...",
  "documentation" : "...",
  "catalogs" : [ {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  }, {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  } ],
  "keywordCount" : 12345,
  "id" : "...",
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "uri" : "..."
},
            "description" : "Catalog not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RdsCatalog"
            },
            "examples" : {
  "urls" : [ "...", "..." ],
  "urlCount" : 12345,
  "isPrivate" : true,
  "dataProductCount" : 12345,
  "label" : "...",
  "dataProducts" : [ {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  }, {
    "isPrivate" : true,
    "id" : "...",
    "urls" : [ "...", "..." ],
    "exclusion" : "...",
    "keywords" : [ "...", "..." ],
    "dataSource" : {
      "description" : "...",
      "target" : { },
      "name" : "...",
      "configuration" : { },
      "purpose" : [ "...", "..." ],
      "id" : "..."
    },
    "keywordCount" : 12345,
    "name" : "...",
    "documentation" : "...",
    "lastUpdate" : 12345,
    "uri" : "...",
    "label" : "...",
    "description" : "...",
    "urlCount" : 12345
  } ],
  "catalogCount" : 12345,
  "lastUpdate" : 12345,
  "exclusion" : "...",
  "name" : "...",
  "documentation" : "...",
  "catalogs" : [ {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  }, {
    "urls" : [ "...", "..." ],
    "urlCount" : 12345,
    "isPrivate" : true,
    "dataProductCount" : 12345,
    "label" : "...",
    "dataProducts" : [ {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    }, {
      "isPrivate" : true,
      "id" : "...",
      "urls" : [ "...", "..." ],
      "exclusion" : "...",
      "keywords" : [ "...", "..." ],
      "dataSource" : { },
      "keywordCount" : 12345,
      "name" : "...",
      "documentation" : "...",
      "lastUpdate" : 12345,
      "uri" : "...",
      "label" : "...",
      "description" : "...",
      "urlCount" : 12345
    } ],
    "catalogCount" : 12345,
    "lastUpdate" : 12345,
    "exclusion" : "...",
    "name" : "...",
    "documentation" : "...",
    "catalogs" : [ { }, { } ],
    "keywordCount" : 12345,
    "id" : "...",
    "keywords" : [ "...", "..." ],
    "description" : "...",
    "uri" : "..."
  } ],
  "keywordCount" : 12345,
  "id" : "...",
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "uri" : "..."
},
            "description" : "Catalog retrieved successfully."
          }
        }
      }
      ,
      "patch" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Update existing catalog.",
        "description" : "Update existing catalog. This is an administrative end point meant to\nupdate the a specified catalog with values from the provided catalog\nobject.",
        "operationId" : "patchCatalog",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog to update."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RdsCatalog"
            },
            "description" : "The updated catalog object to update the persisted value with."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Create catalog.",
        "description" : "Create catalog. Creates a new catalog with the specified ID.",
        "operationId" : "putCatalog",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog to create."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RdsCatalog"
            },
            "description" : "The catalog object to create under the given ID."
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/metadata" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get catalog metadata.",
        "description" : "Get catalog metadata. This will retrieve the metadata for all of the data\nproducts that are in the specified catalog. For each data product there\nwill be a record layout with its variables along with any classifications\nthat are referenced by the variables.",
        "operationId" : "getCatalogMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "the ID of the catalog whose metadata is desired."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ]
},
            "description" : "Catalog not found."
          },
          "200" : {
            "schema" : {
"description" : "a list of metadata wrappers",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_DataSetMetadata"
}
            },
            "examples" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ]
},
            "description" : "a list of metadata wrappers"
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}" : {
      "delete" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Delete data product.",
        "description" : "Delete data product. Deletes the specified data product.",
        "operationId" : "deleteDataProduct",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to delete."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get data product.",
        "description" : "Get data product. Returns the specified data product. This shows just a\nsingle data product in a catalog, there is no additional information in\nthis call, it simply limits the scope of what is returned.",
        "operationId" : "getDataProduct",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to retrieve."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "isPrivate" : true,
  "id" : "...",
  "urls" : [ "...", "..." ],
  "exclusion" : "...",
  "keywords" : [ "...", "..." ],
  "dataSource" : {
    "description" : "...",
    "target" : {
      "tableName" : "...",
      "dataSourceType" : "MONET",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "name" : "...",
    "configuration" : {
      "tableName" : "...",
      "dataSourceType" : "MYSQL",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "purpose" : [ "...", "..." ],
    "id" : "..."
  },
  "keywordCount" : 12345,
  "name" : "...",
  "documentation" : "...",
  "lastUpdate" : 12345,
  "uri" : "...",
  "label" : "...",
  "description" : "...",
  "urlCount" : 12345
},
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RdsDataProduct"
            },
            "examples" : {
  "isPrivate" : true,
  "id" : "...",
  "urls" : [ "...", "..." ],
  "exclusion" : "...",
  "keywords" : [ "...", "..." ],
  "dataSource" : {
    "description" : "...",
    "target" : {
      "tableName" : "...",
      "dataSourceType" : "BIGQUERY",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "name" : "...",
    "configuration" : {
      "tableName" : "...",
      "dataSourceType" : "SOCRATA",
      "user" : "...",
      "password" : "...",
      "connectionString" : "...",
      "readerConfiguration" : { },
      "$type" : "SQL"
    },
    "purpose" : [ "...", "..." ],
    "id" : "..."
  },
  "keywordCount" : 12345,
  "name" : "...",
  "documentation" : "...",
  "lastUpdate" : 12345,
  "uri" : "...",
  "label" : "...",
  "description" : "...",
  "urlCount" : 12345
},
            "description" : "Data product retrieved successfully."
          }
        }
      }
      ,
      "patch" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Update data product.",
        "description" : "Update data product. Administrative endpoint for updating a data product.",
        "operationId" : "patchDataProduct",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product being updated."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RdsDataProduct"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Create data product.",
        "description" : "Create data product. Creates a new data product with the specified ID in\nthe specified catalog.",
        "operationId" : "putDataProduct",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog to create the product in."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product being created."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RdsDataProduct"
            },
            "description" : "The data product object to create"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classification/{classificationId}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get classification.",
        "description" : "Get classification. Returns the specified classification with more detail\nthan the summary. Codes will be excluded from this object, the idea being\nthat this classification could have a large amount of codes and clients\ncan build these codes up through the used of the codes endpoints.",
        "operationId" : "getClassification",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "classificationId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI the classification to return."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the classification."
          },
          {
            "name" : "ids",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The ID or URI of the resources desired."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The number of resources to return."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The offset to start at."
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : ["ASC", "DESC"],
            "description" : "The sort order or the returned resources."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "rootCodeCount" : 12345,
  "levels" : [ {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "ALPHA_NUMERIC",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  }, {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "NUMERIC",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  } ],
  "levelCount" : 12345,
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ]
},
            "description" : "Catalog, data product, or classification not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_Classification"
            },
            "examples" : {
  "rootCodeCount" : 12345,
  "levels" : [ {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "NUMERIC_ALPHA",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  }, {
    "conceptUri" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "codePattern" : "...",
    "codeDataType" : "ALPHA",
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ],
    "categorySetUri" : {
      "customPropertyCount" : 12345,
      "categorys" : [ { }, { } ],
      "topConcept" : { },
      "categoryCount" : 12345,
      "customProperties" : [ { }, { } ]
    },
    "codeCount" : 12345,
    "depth" : 12345,
    "conceptUriUri" : "...",
    "categorySetUriUri" : "..."
  } ],
  "levelCount" : 12345,
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ]
},
            "description" : "Classification retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classification/{classificationId}/codes" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get codes.",
        "description" : "Get codes. This allows the client to page through or build up the codes\nof the classification as desired.",
        "operationId" : "getCodes",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "classificationId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the classification that contains the codes."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the classification."
          },
          {
            "name" : "ids",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The ID or URI of the resources desired."
          },
          {
            "name" : "includeChildren",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag indicating if child codes should be included on the code\n(if they are available)."
          },
          {
            "name" : "includeParents",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag indicating if parent URI should be included on the code\n(if they are available)."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The number of resources to return."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The offset to start at."
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : ["ASC", "DESC"],
            "description" : "The sort order or the returned resources."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "translationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "codeValue" : "...",
  "childCount" : 12345,
  "residual" : true,
  "category" : {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  },
  "reverseTranslationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "childUris" : [ "...", "..." ],
  "sinceVersion" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "synonyms" : [ "...", "..." ],
  "synonymCount" : 12345,
  "translationAidCount" : 12345,
  "parent" : "...",
  "reverseTranslationAidCount" : 12345
},
            "description" : "Catalog, data product, or classification not found."
          },
          "200" : {
            "schema" : {
"description" : "Codes retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Code"
}
            },
            "examples" : {
  "translationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "codeValue" : "...",
  "childCount" : 12345,
  "residual" : true,
  "category" : {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  },
  "reverseTranslationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "childUris" : [ "...", "..." ],
  "sinceVersion" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "synonyms" : [ "...", "..." ],
  "synonymCount" : 12345,
  "translationAidCount" : 12345,
  "parent" : "...",
  "reverseTranslationAidCount" : 12345
},
            "description" : "Codes retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classification/{classificationId}/level/{levelId}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get level.",
        "description" : "Get level. Returns the specified level. Similar to the classification\nendpoints, this will not return the codes on the level as the client can\ndo this through the use of the appropriate codes endpoint.",
        "operationId" : "getLevel",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "classificationId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the classification that contains the level."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the classification."
          },
          {
            "name" : "levelId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the desired level."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "conceptUri" : {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  },
  "codePattern" : "...",
  "codeDataType" : "ALPHA_NUMERIC",
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ],
  "categorySetUri" : {
    "customPropertyCount" : 12345,
    "categorys" : [ {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    }, {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    } ],
    "topConcept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "categoryCount" : 12345,
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ]
  },
  "codeCount" : 12345,
  "depth" : 12345,
  "conceptUriUri" : "...",
  "categorySetUriUri" : "..."
},
            "description" : "Catalog, data product, classification, or level not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_Level"
            },
            "examples" : {
  "conceptUri" : {
    "narrowerConceptCount" : 12345,
    "customPropertyCount" : 12345,
    "broaderConceptCount" : 12345,
    "definitionSource" : "...",
    "narrowerConcepts" : [ { }, { } ],
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ],
    "relatedConcepts" : [ { }, { } ],
    "broaderConcepts" : [ { }, { } ],
    "synonymCount" : 12345,
    "relatedConceptCount" : 12345,
    "synonyms" : [ "...", "..." ]
  },
  "codePattern" : "...",
  "codeDataType" : "NUMERIC",
  "codes" : [ {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  }, {
    "translationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "codeValue" : "...",
    "childCount" : 12345,
    "residual" : true,
    "category" : {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    },
    "reverseTranslationAids" : [ {
      "value" : "...",
      "reference" : "..."
    }, {
      "value" : "...",
      "reference" : "..."
    } ],
    "childUris" : [ "...", "..." ],
    "sinceVersion" : {
      "versionDate" : 12345,
      "versionNumber" : { }
    },
    "synonyms" : [ "...", "..." ],
    "synonymCount" : 12345,
    "translationAidCount" : 12345,
    "parent" : "...",
    "reverseTranslationAidCount" : 12345
  } ],
  "categorySetUri" : {
    "customPropertyCount" : 12345,
    "categorys" : [ {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    }, {
      "residual" : true,
      "synonyms" : [ "...", "..." ],
      "concept" : { },
      "synonymCount" : 12345
    } ],
    "topConcept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "categoryCount" : 12345,
    "customProperties" : [ {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    }, {
      "repeatable" : true,
      "propertyRepresentation" : { },
      "maxOccurs" : 12345,
      "defining" : true,
      "minOccurs" : 12345
    } ]
  },
  "codeCount" : 12345,
  "depth" : 12345,
  "conceptUriUri" : "...",
  "categorySetUriUri" : "..."
},
            "description" : "Level retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classification/{classificationId}/level/{levelId}/codes" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get level codes.",
        "description" : "Get level codes. Gets the codes of a specific level of a classification.\nThis allows the client to page through or build up a levels codes as\ndesired.",
        "operationId" : "getLevelCodes",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "classificationId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the classification that contains the level."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the classification."
          },
          {
            "name" : "levelId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the level that contains the codes."
          },
          {
            "name" : "ids",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The ID or URI of the resources desired."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The number of resources to return."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The offset to start at."
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : ["ASC", "DESC"],
            "description" : "The sort order or the returned resources."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "translationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "codeValue" : "...",
  "childCount" : 12345,
  "residual" : true,
  "category" : {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  },
  "reverseTranslationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "childUris" : [ "...", "..." ],
  "sinceVersion" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "synonyms" : [ "...", "..." ],
  "synonymCount" : 12345,
  "translationAidCount" : 12345,
  "parent" : "...",
  "reverseTranslationAidCount" : 12345
},
            "description" : "Catalog, data product, classification, or level not found."
          },
          "200" : {
            "schema" : {
"description" : "Codes retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Code"
}
            },
            "examples" : {
  "translationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "codeValue" : "...",
  "childCount" : 12345,
  "residual" : true,
  "category" : {
    "residual" : true,
    "synonyms" : [ "...", "..." ],
    "concept" : {
      "narrowerConceptCount" : 12345,
      "customPropertyCount" : 12345,
      "broaderConceptCount" : 12345,
      "definitionSource" : "...",
      "narrowerConcepts" : [ { }, { } ],
      "customProperties" : [ { }, { } ],
      "relatedConcepts" : [ { }, { } ],
      "broaderConcepts" : [ { }, { } ],
      "synonymCount" : 12345,
      "relatedConceptCount" : 12345,
      "synonyms" : [ "...", "..." ]
    },
    "synonymCount" : 12345
  },
  "reverseTranslationAids" : [ {
    "value" : "...",
    "reference" : "..."
  }, {
    "value" : "...",
    "reference" : "..."
  } ],
  "childUris" : [ "...", "..." ],
  "sinceVersion" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "synonyms" : [ "...", "..." ],
  "synonymCount" : 12345,
  "translationAidCount" : 12345,
  "parent" : "...",
  "reverseTranslationAidCount" : 12345
},
            "description" : "Codes retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classification/{classificationId}/{codeId}" : {
      "patch" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Update code.",
        "description" : "Update code. Administrative endpoint for editing a code.",
        "operationId" : "patchCode",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "classificationId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the classification that contains the code."
          },
          {
            "name" : "codeId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID or URI of the code being updated."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the classification."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_Code"
            },
            "description" : "The updated code."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or classification not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/classifications" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get classifications.",
        "description" : "Get classifications. Get the classifications of a specific data product.\nReturns a list of summary objects about any classifications that are used\nin the specified data product.These summary objects hold the\nclassification uri and\n\nid (among other things) either of which can be used to get more\ninformation about the classification.",
        "operationId" : "getClassifications",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product whose classifications are desired."
          },
          {
            "name" : "ids",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The ID or URI of the resources desired."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The number of resources to return."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "The offset to start at."
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : ["ASC", "DESC"],
            "description" : "The sort order or the returned resources."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "version" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "name" : "...",
  "id" : "...",
  "description" : "..."
},
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"description" : "Classifications retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ClassificationSummary"
}
            },
            "examples" : {
  "version" : {
    "versionDate" : 12345,
    "versionNumber" : {
      "major" : 12345,
      "minor" : 12345,
      "release" : 12345
    }
  },
  "name" : "...",
  "id" : "...",
  "description" : "..."
},
            "description" : "Classifications retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/dataSource/{dataSourceId}" : {
      "patch" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Update data source.",
        "description" : "Update data source. Administrative endpoint for updating data source\nconnection information.",
        "operationId" : "patchDataSource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the data source."
          },
          {
            "name" : "dataSourceId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data source being updated."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RdsDataSource"
            },
            "description" : "The updated data source to persist."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/dataSources" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get data sources.",
        "description" : "Get data sources. Gets the specified data products data sources. This is\nan administrative end point for viewing data source connection\ninformation. This information is typically hidden from the general\nuser,however,for the administrator it allows them to see connection\ninformation that they may need to edit if there are changes to their\ndatabase.",
        "operationId" : "getDataSources",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to whose data sources are to be\nretrieved."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "description" : "...",
  "target" : {
    "tableName" : "...",
    "dataSourceType" : "MICROSOFT",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "name" : "...",
  "configuration" : {
    "tableName" : "...",
    "dataSourceType" : "BIGQUERY",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "purpose" : [ "...", "..." ],
  "id" : "..."
},
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"description" : "Data sources retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RdsDataSource"
}
            },
            "examples" : {
  "description" : "...",
  "target" : {
    "tableName" : "...",
    "dataSourceType" : "MYSQL",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "name" : "...",
  "configuration" : {
    "tableName" : "...",
    "dataSourceType" : "MONET",
    "user" : "...",
    "password" : "...",
    "connectionString" : "...",
    "readerConfiguration" : {
      "description" : "...",
      "type" : "...",
      "password" : "...",
      "connectionString" : "...",
      "name" : "...",
      "user" : "...",
      "id" : "...",
      "tableName" : "...",
      "columnResolver" : { },
      "queryResolver" : { },
      "query" : { },
      "queryInput" : { },
      "recordLayout" : { },
      "dateConfiguration" : { }
    },
    "$type" : "SQL"
  },
  "purpose" : [ "...", "..." ],
  "id" : "..."
},
            "description" : "Data sources retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/metadata" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get data product metadata.",
        "description" : "Get data product metadata. This will retrieve all the metadata for the\nspecified data product. This will contain a record layout with its\nvariables along with any classifications that are referenced by the\nvariables.",
        "operationId" : "getDataProductMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Catalog holding the DataProduct we want the metadata of"
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "DataProduct we want the metadata of"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "ZERO",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ]
},
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_DataSetMetadata"
            },
            "examples" : {
  "recordLayout" : {
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "layoutVariableCount" : 12345,
    "primaryKey" : {
      "purpose" : "...",
      "cardinality" : "MANY",
      "variableCount" : 12345,
      "variables" : [ { }, { } ]
    }
  },
  "classifications" : [ {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  }, {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  } ]
},
            "description" : "a metadata wrapper"
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get variable.",
        "description" : "Get variable. Returns a variable with more detail than what is provided\nby the summary object. If the variable has a classification, its URI\nshould be available on the variable which can be used to retrieve the\nclassification.",
        "operationId" : "getVariable",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the desired variable."
          },
          {
            "name" : "variableId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The Id or URI of the variable that is desired"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "disclosive" : true,
  "index" : 12345,
  "format" : "...",
  "dataType" : "...",
  "frequencies" : {
    "sets" : [ {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    }, {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    } ],
    "dateProduced" : 12345
  },
  "classificationUri" : "...",
  "measure" : true,
  "classification" : {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA_NUMERIC",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  },
  "decimals" : 12345,
  "fixedStorageWidth" : 12345,
  "endPosition" : 12345,
  "synonyms" : [ "...", "..." ],
  "required" : true,
  "weight" : true,
  "startPosition" : 12345,
  "questionText" : "...",
  "synonymCount" : 12345,
  "storageType" : "...",
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  },
  "computation" : {
    "computationExpressionCount" : 12345,
    "computationExpressions" : [ "...", "..." ],
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "variableCount" : 12345
  }
},
            "description" : "Catalog, data product, or variable not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_Variable"
            },
            "examples" : {
  "disclosive" : true,
  "index" : 12345,
  "format" : "...",
  "dataType" : "...",
  "frequencies" : {
    "sets" : [ {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    }, {
      "weighted" : true,
      "map" : {
        "property1" : 12345.0,
        "property2" : 12345.0
      },
      "weights" : [ "...", "..." ]
    } ],
    "dateProduced" : 12345
  },
  "classificationUri" : "...",
  "measure" : true,
  "classification" : {
    "rootCodeCount" : 12345,
    "levels" : [ {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "NUMERIC_ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    }, {
      "conceptUri" : { },
      "codePattern" : "...",
      "codeDataType" : "ALPHA",
      "codes" : [ { }, { } ],
      "categorySetUri" : { },
      "codeCount" : 12345,
      "depth" : 12345,
      "conceptUriUri" : "...",
      "categorySetUriUri" : "..."
    } ],
    "levelCount" : 12345,
    "codes" : [ {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    }, {
      "translationAids" : [ { }, { } ],
      "codeValue" : "...",
      "childCount" : 12345,
      "residual" : true,
      "category" : { },
      "reverseTranslationAids" : [ { }, { } ],
      "childUris" : [ "...", "..." ],
      "sinceVersion" : { },
      "synonyms" : [ "...", "..." ],
      "synonymCount" : 12345,
      "translationAidCount" : 12345,
      "parent" : "...",
      "reverseTranslationAidCount" : 12345
    } ]
  },
  "decimals" : 12345,
  "fixedStorageWidth" : 12345,
  "endPosition" : 12345,
  "synonyms" : [ "...", "..." ],
  "required" : true,
  "weight" : true,
  "startPosition" : 12345,
  "questionText" : "...",
  "synonymCount" : 12345,
  "storageType" : "...",
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  },
  "computation" : {
    "computationExpressionCount" : 12345,
    "computationExpressions" : [ "...", "..." ],
    "variables" : [ {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    }, {
      "disclosive" : true,
      "index" : 12345,
      "format" : "...",
      "dataType" : "...",
      "frequencies" : { },
      "classificationUri" : "...",
      "measure" : true,
      "classification" : { },
      "decimals" : 12345,
      "fixedStorageWidth" : 12345,
      "endPosition" : 12345,
      "synonyms" : [ "...", "..." ],
      "required" : true,
      "weight" : true,
      "startPosition" : 12345,
      "questionText" : "...",
      "synonymCount" : 12345,
      "storageType" : "...",
      "summaryStatistics" : { },
      "computation" : { }
    } ],
    "variableCount" : 12345
  }
},
            "description" : "Variable retrieved successfully."
          }
        }
      }
      ,
      "patch" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Update a variable.",
        "description" : "Update a variable. Administrative endpoint for editing a variable.",
        "operationId" : "patchVariable",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the variable."
          },
          {
            "name" : "variableId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The Id or URI of the variable that is being updated."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_Variable"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or variable not found."
          },
          "200" : {
            "schema" : {
"description" : "Process started.",
"type" : "string"
            },
            "description" : "Process started."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}/frequencies" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get frequencies.",
        "description" : "Get frequencies. Get the frequencies for a specified variable of a data\nproduct. This method is primarily available to get the frequencies in a\nformat that is consumable by the supported charting serializations. If\nthere are no frequencies available the call will return null.",
        "operationId" : "getVariableFrequencies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the variable."
          },
          {
            "name" : "variableId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The Id or URI of the variable that contains the desired\nfrequencies."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "sets" : [ { }, { } ]
},
            "description" : "Catalog, data product, or variable not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_FormattedFrequencies"
            },
            "examples" : {
  "sets" : [ { }, { } ]
},
            "description" : "Frequencies retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}/frequencies/{index}" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get frequency set.",
        "description" : "Get frequency set. Get a specific set of frequencies for a specified\nvariable of a data product This method is meant to be used to get a\nspecific set of frequencies for a variable in a format that is consumable\nby the supported charting serializations.If there are no frequencies\navailable the call will return null.",
        "operationId" : "getVariableFrequencySet",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the variable."
          },
          {
            "name" : "index",
            "in" : "path",
            "required" : true,
            "type" : "integer",
            "description" : ""
          },
          {
            "name" : "variableId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The Id or URI of the variable that contains the desired\nfrequencies."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : { },
            "description" : "Catalog, data product, or variable not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_FormattedFrequencySet"
            },
            "examples" : { },
            "description" : "Frequencies retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/variables" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get variable summaries.",
        "description" : "Get variable summaries. Get the variables of a specific data product.\nReturns a list of summary objects about any variables that are used in\nthe specified data product. These summaries contain both the variable URI\nand ID, which can be used to get more detailed information about the\nvariable.",
        "operationId" : "getVariables",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the desired\nvariables."
          },
          {
            "name" : "collimit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Limits the number of columns returned."
          },
          {
            "name" : "coloffset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Determines which column to start at."
          },
          {
            "name" : "cols",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Column names, regular expressions, key words, variable groups, or\nconcepts to select.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>cols=V1<\/li>\n<li>cols=V[0-9]+<\/li>\n<li>cols=$keyword<\/li>\n<li>cols=V[0-9]+,V1a,$keyword<\/li>\n<\/ul>"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "name" : "...",
  "label" : "...",
  "index" : 12345,
  "id" : "...",
  "classificationId" : "...",
  "dataType" : "...",
  "storageType" : "...",
  "uri" : "...",
  "classificationUri" : "...",
  "questionText" : "..."
},
            "description" : "Catalog or data product not found."
          },
          "200" : {
            "schema" : {
"description" : "Variables retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VariableSummary"
}
            },
            "examples" : {
  "keywords" : [ "...", "..." ],
  "description" : "...",
  "name" : "...",
  "label" : "...",
  "index" : 12345,
  "id" : "...",
  "classificationId" : "...",
  "dataType" : "...",
  "storageType" : "...",
  "uri" : "...",
  "classificationUri" : "...",
  "questionText" : "..."
},
            "description" : "Variables retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/catalog/{catalogId}/{dataProductId}/variables/profile" : {
      "get" : {
        "tags" : [ "MetadataController" ],
        "summary" : "Get variable profiles.",
        "description" : "Get variable profiles. This will run analysis on any variables specified\nin the query and return a complete profile (both summary statistics and\nfrequencies if applicable) the variables. This will take the provided\nselect query into account, any filters (where clause) will be used to to\ndetermin the profile.",
        "operationId" : "getVariableProfiles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product that contains the variable."
          },
          {
            "name" : "collimit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Limits the number of columns returned."
          },
          {
            "name" : "coloffset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Determines which column to start at."
          },
          {
            "name" : "cols",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Column names, regular expressions, key words, variable groups, or\nconcepts to select. Any of these can be excluded as well by prepending\n'~' to these syntaxes.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>cols=V1<\/li>\n<li>cols=V[0-9]+<\/li>\n<li>cols=$keyword<\/li>\n<li>cols=V[0-9]+,V1a,$keyword<\/li>\n<li>cols=~V[0-9]+<\/li>\n<li>cols=~V[0-9]+,~$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying to inject codes into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "frequencies" : {
    "sets" : [ { }, { } ]
  },
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  }
},
            "description" : "Catalog, data product, or variable not found."
          },
          "200" : {
            "schema" : {
"description" : "Profile retrieved successfully.",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RdsFormattedVariableProfile"
}
            },
            "examples" : {
  "frequencies" : {
    "sets" : [ { }, { } ]
  },
  "summaryStatistics" : {
    "sets" : [ {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    }, {
      "median" : 12345.0,
      "max" : 12345.0,
      "kurtosis" : 12345.0,
      "distinct" : 12345.0,
      "userMissing" : 12345.0,
      "populated" : 12345.0,
      "weights" : [ "...", "..." ],
      "standardDeviation" : 12345.0,
      "distinctSet" : [ { }, { } ],
      "weighted" : true,
      "min" : 12345.0,
      "mean" : 12345.0,
      "variance" : 12345.0,
      "missing" : 12345.0,
      "skewness" : 12345.0
    } ],
    "dateProduced" : 12345
  }
},
            "description" : "Profile retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/package/option/bundle/{bundleId}" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get bundle.",
        "description" : "Get bundle. When a client wants to get a particular bundle they can use\nthis endpoint to retrieve a list of OptionSets that are\npre-configured to work with each other.",
        "operationId" : "getBundleOptions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "bundleId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the bundle whose options are desired"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "formatType" : "OptionSet",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "DATE",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BIG_DECIMAL",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "METADATA"
},
            "description" : "Bundle not found."
          },
          "200" : {
            "schema" : {
"description" : "Options retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OptionSet"
}
            },
            "examples" : {
  "formatType" : "OptionSet",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "CHAR",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "TIME",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "METADATA"
},
            "description" : "Options retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/package/option/bundles" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get all packaging bundles.",
        "description" : "Get all packaging bundles. These are groups of related OptionSets\ngrouped together with some pre-configuration already done. This can\nensure that users can get a set of options quickly and already set up\nwith all the options needed.",
        "operationId" : "getPackagingBundles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Option bundles retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OptionBundle"
}
            },
            "examples" : {
  "id" : "...",
  "description" : "...",
  "includedFormats" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "name" : "..."
},
            "description" : "Option bundles retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/package/options" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get all packaging options.",
        "description" : "Get all packaging options. This is a starting point for clients to\nidentify all the possible packaging formats that are available.",
        "operationId" : "getPackagingOptions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_PackagingOptions"
            },
            "examples" : {
  "documents" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "data" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "scripts" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ],
  "metadata" : [ {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "id" : "..."
  } ]
},
            "description" : "Options retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/package/options/{formatId}" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get option details.",
        "description" : "Get option details. When a client wants to know what type of options they\nneed to fill out for a specified packaging format they can call this to\nget the specified formats options and fill them out as needed.",
        "operationId" : "getPackagingFormatOptions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "formatId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the format whose options are desired"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "formatType" : "OptionSet",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "CHAR",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "TEXT",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DATA"
},
            "description" : "Package format not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_OptionSet"
            },
            "examples" : {
  "formatType" : "OptionSet",
  "id" : "...",
  "format" : "...",
  "options" : [ {
    "value" : { },
    "required" : true,
    "dataType" : "BOOLEAN",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  }, {
    "value" : { },
    "required" : true,
    "dataType" : "BYTE_ARRAY",
    "description" : "...",
    "name" : "...",
    "options" : [ { }, { } ]
  } ],
  "type" : "DATA"
},
            "description" : "Options retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/package/processdetails/{processId}" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get packaging process details.",
        "description" : "Get packaging process details. End point for monitoring the packaging\nprocess, which includes the processes current status, completion\npercentage, and any failures that occur.",
        "operationId" : "getPackagingProcessDetails",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "processId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the process to check."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "statusMessage" : "...",
  "completed" : 12345,
  "status" : "COMPLETED",
  "completionDetails" : {
    "detailsList" : [ {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    }, {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    } ],
    "infoList" : [ {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    }, {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    } ]
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "id" : "..."
},
            "description" : "Process not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ProcessStatusDetailOfPackagingCompletionDetails"
            },
            "examples" : {
  "statusMessage" : "...",
  "completed" : 12345,
  "status" : "PROCESSING",
  "completionDetails" : {
    "detailsList" : [ {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    }, {
      "tableName" : "...",
      "sqlSerializationDetails" : [ { }, { } ],
      "resourceUris" : [ "...", "..." ],
      "dateCreated" : 12345,
      "outputFormat" : "..."
    } ],
    "infoList" : [ {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    }, {
      "contentType" : "...",
      "fileName" : "...",
      "fileKey" : "...",
      "fileSize" : 12345
    } ]
  },
  "failure" : {
    "cause" : { },
    "suppressed" : [ { }, { } ],
    "message" : "...",
    "stackTrace" : [ {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    }, {
      "methodName" : "...",
      "fileName" : "...",
      "nativeMethod" : true,
      "lineNumber" : 12345,
      "className" : "..."
    } ],
    "localizedMessage" : "..."
  },
  "id" : "..."
},
            "description" : "Packaging process started successfully."
          }
        }
      }
    }
    ,
    "\/api/package/{catalogId}/{dataProductId}/select" : {
      "post" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Package select.",
        "description" : "Package select. Runs a packaging process on a data set with the provided\nselect query.",
        "operationId" : "packageSelect",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "collimit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Limits the number of columns returned."
          },
          {
            "name" : "coloffset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Determines which column to start at."
          },
          {
            "name" : "cols",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Column names, regular expressions, key words, variable groups, or\nconcepts to select. Any of these can be excluded as well by prepending\n'~' to these syntaxes.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>cols=V1<\/li>\n<li>cols=V[0-9]+<\/li>\n<li>cols=$keyword<\/li>\n<li>cols=V[0-9]+,V1a,$keyword<\/li>\n<li>cols=~V[0-9]+<\/li>\n<li>cols=~V[0-9]+,~$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying to inject codes into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to query."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OptionSet"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Packaging process started successfully.",
"type" : "string"
            },
            "description" : "Packaging process started successfully."
          }
        }
      }
    }
    ,
    "\/api/package/{catalogId}/{dataProductId}/tabulate" : {
      "post" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Package tabulation.",
        "description" : "Package tabulation. Runs a packaging process on a data set with the\nprovided tabulate query.",
        "operationId" : "packageTabulate",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "dims",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as dimensions.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>dims=V1<\/li>\n<li>dims=V[0-9]+<\/li>\n<li>dims=$keyword<\/li>\n<li>dims=V[0-9]+,V1a,$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if we want the values injected into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "measure",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as measures. Count is used by\ndefault.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>measure=count:Count(V1)<\/li>\n<li>measure=avg:AVG(V1)<\/li>\n<\/ul>"
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "totals",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether subtotals should be returned along side the data."
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to query."
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_OptionSet"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Packaging process started successfully.",
"type" : "string"
            },
            "description" : "Packaging process started successfully."
          }
        }
      }
    }
    ,
    "\/api/package/{processId}" : {
      "get" : {
        "tags" : [ "PackagingController" ],
        "summary" : "Get data package.",
        "description" : "Get data package. Gets a zip file containing the output of the specified\npackaging process.",
        "operationId" : "getPackage",
        "parameters" : [
          {
            "name" : "processId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the process whose contents are desired."
          },
          {
            "name" : "status",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : ""
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Process or package not found."
          },
          "200" : {
            "description" : "Query results returned successfully."
          }
        }
      }
    }
    ,
    "\/api/query/{catalogId}/{dataProductId}/count" : {
      "get" : {
        "tags" : [ "QueryController" ],
        "summary" : "Get record count.",
        "description" : "Get record count. Runs a query to count the records of the specified data\nproduct.",
        "operationId" : "count",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to query."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Query results returned successfully.",
"type" : "number"
            },
            "description" : "Query results returned successfully."
          }
        }
      }
    }
    ,
    "\/api/query/{catalogId}/{dataProductId}/select" : {
      "get" : {
        "tags" : [ "QueryController" ],
        "summary" : "Run select query.",
        "description" : "Run select query. Running a select query on the specified data product\nreturns record level microdata. A variety of querying techniques can be\nused to subset, compute, order, filter and format the results.",
        "operationId" : "select",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to query."
          },
          {
            "name" : "collimit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Limits the number of columns returned."
          },
          {
            "name" : "coloffset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Determines which column to start at."
          },
          {
            "name" : "cols",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Column names, regular expressions, key words, variable groups, or\nconcepts to select. Any of these can be excluded as well by prepending\n'~' to these syntaxes.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>cols=V1<\/li>\n<li>cols=V[0-9]+<\/li>\n<li>cols=$keyword<\/li>\n<li>cols=V[0-9]+,V1a,$keyword<\/li>\n<li>cols=~V[0-9]+<\/li>\n<li>cols=~V[0-9]+,~$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying to inject codes into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : { },
            "description" : "Catalog, data product, data source, or classification not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_FormattedDataSet"
            },
            "examples" : { },
            "description" : "Query results returned successfully."
          }
        }
      }
    }
    ,
    "\/api/query/{catalogId}/{dataProductId}/tabulate" : {
      "get" : {
        "tags" : [ "QueryController" ],
        "summary" : "Run tabulation query.",
        "description" : "Run tabulation query. Running tabulations on the specified data product\nreturns aggregate level data about the dimensions and measures specified.\nA variety of querying techniques can be used to subset, compute, order,\nfilter and format the results.",
        "operationId" : "tabulate",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to query."
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "dims",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as dimensions.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>dims=V1<\/li>\n<li>dims=V[0-9]+<\/li>\n<li>dims=$keyword<\/li>\n<li>dims=V[0-9]+,V1a,$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if we want the values injected into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "measure",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as measures. Count is used by\ndefault.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>measure=count:Count(V1)<\/li>\n<li>measure=avg:AVG(V1)<\/li>\n<\/ul>"
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "totals",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether subtotals should be returned along side the data."
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : { },
            "description" : "Catalog, data product, data source, or classification not found."
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_FormattedDataSet"
            },
            "examples" : { },
            "description" : "Query results returned successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/catalog" : {
      "get" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Get catalog statistics.",
        "description" : "Get catalog statistics. Gets the statistics for all the catalogs in RDS.\nThis will query the RDS statistics and return an array of\nRdsCatalogStatistics objects containing statistics and data sets\ndescribing the total number of queries and data about queries over time\nfor each catalog. <strong>This is meant as a catalog overview and will\nnot include the statistics for the catalogs data products.<\/strong> To\nget data product statistics api/statistics/catalog/{catalogId} should be\nused. This method can be used in conjunction with that to provide a high\nlevel view and allow clients to drill down into the catalog that\ninterests them.",
        "operationId" : "getRootCatalogStatistics",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "400" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "totalQueries" : 12345,
  "name" : "...",
  "productStatistics" : [ {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  }, {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  } ],
  "id" : "...",
  "queriesOverTime" : { },
  "description" : "..."
},
            "description" : "Invalid format"
          },
          "200" : {
            "schema" : {
"description" : "Catalog statistics retrieved successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RdsCatalogStatistics"
}
            },
            "examples" : {
  "totalQueries" : 12345,
  "name" : "...",
  "productStatistics" : [ {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  }, {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  } ],
  "id" : "...",
  "queriesOverTime" : { },
  "description" : "..."
},
            "description" : "Catalog statistics retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/catalog/{catalogId}" : {
      "get" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Get catalog statistics (with data product statistics).",
        "description" : "Get catalog statistics (with data product statistics). Gets complete\ncatalog statistics for the specified catalog, including statistics about\neach data product in the specified catalog.",
        "operationId" : "getCatalogStatistics",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "the ID of the catalog whose statistics (and data product\nstatistics) are desired."
          }
        ],
        "responses" : {
          "400" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "totalQueries" : 12345,
  "name" : "...",
  "productStatistics" : [ {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  }, {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  } ],
  "id" : "...",
  "queriesOverTime" : { },
  "description" : "..."
},
            "description" : "Invalid format"
          },
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RdsCatalogStatistics"
            },
            "examples" : {
  "totalQueries" : 12345,
  "name" : "...",
  "productStatistics" : [ {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  }, {
    "totalQueries" : 12345,
    "description" : "...",
    "popularColumns" : { },
    "id" : "...",
    "queriesOverTimeByService" : {
      "property1" : { },
      "property2" : { }
    },
    "queriesOverTime" : { },
    "popularColumnsByService" : {
      "property1" : { },
      "property2" : { }
    },
    "name" : "...",
    "popularFiltersByService" : {
      "property1" : { },
      "property2" : { }
    },
    "popularFilters" : { }
  } ],
  "id" : "...",
  "queriesOverTime" : { },
  "description" : "..."
},
            "description" : "Catalog statistics retrieved successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/popular" : {
      "get" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Get popular queries.",
        "description" : "Get popular queries. Gets all of the queries that are considered popular\nregardless of data product, which are either manually set by a manager or\nthe most common queries made.",
        "operationId" : "getPopularQueries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "count",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "description" : "The number of popular queries to return. For example, the top\n10 most popular queries."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "apiCall" : "...",
  "name" : "...",
  "description" : "..."
},
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Popular queries returned successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_StatisticsQueryDescriptor"
}
            },
            "examples" : {
  "apiCall" : "...",
  "name" : "...",
  "description" : "..."
},
            "description" : "Popular queries returned successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/popular/{catalogId}/{dataProductId}" : {
      "get" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Get popular queries.",
        "description" : "Get popular queries. Gets the queries that are considered popular for the\nspecified data product, which are either manually set by a manager or the\nmost common queries made.",
        "operationId" : "getPopularProductQueries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product whose popular queries are desired."
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "description" : "The number of popular queries to return. For example, the top\n10 most popular queries."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "examples" : {
  "apiCall" : "...",
  "name" : "...",
  "description" : "..."
},
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "schema" : {
"description" : "Popular queries returned successfully.",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_StatisticsQueryDescriptor"
}
            },
            "examples" : {
  "apiCall" : "...",
  "name" : "...",
  "description" : "..."
},
            "description" : "Popular queries returned successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/{catalogId}/{dataProductId}/popularity/select" : {
      "post" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Set popular select query.",
        "description" : "Set popular select query. An administrative end point that allows a\nspecific query to be manually set as being popular. This would be used\nwhen a data manager wants to provide users with a starting point that he\nthinks they might be interested in.",
        "operationId" : "setPopularitySelect",
        "parameters" : [
          {
            "name" : "collimit",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Limits the number of columns returned."
          },
          {
            "name" : "coloffset",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "description" : "Determines which column to start at."
          },
          {
            "name" : "cols",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Column names, regular expressions, key words, variable groups, or\nconcepts to select. Any of these can be excluded as well by prepending\n'~' to these syntaxes.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>cols=V1<\/li>\n<li>cols=V[0-9]+<\/li>\n<li>cols=$keyword<\/li>\n<li>cols=V[0-9]+,V1a,$keyword<\/li>\n<li>cols=~V[0-9]+<\/li>\n<li>cols=~V[0-9]+,~$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying to inject codes into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to that the query relates to."
          },
          {
            "name" : "popular",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : "True / false if the query should be considered popular or not."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "description" : "Query set as popular successfully."
          }
        }
      }
    }
    ,
    "\/api/statistics/{catalogId}/{dataProductId}/popularity/tabulate" : {
      "post" : {
        "tags" : [ "StatisticsController" ],
        "summary" : "Set popular tabulate query.",
        "description" : "Set popular tabulate query. An administrative end point that allows a\nspecific query to be manually set as being popular. This would be used\nwhen a data manager wants to provide users with a starting point that he\nthinks they might be interested in.",
        "operationId" : "setPopularityTabulate",
        "parameters" : [
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether the total row count should be returned along side\nthe data."
          },
          {
            "name" : "dims",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as dimensions.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>dims=V1<\/li>\n<li>dims=V[0-9]+<\/li>\n<li>dims=$keyword<\/li>\n<li>dims=V[0-9]+,V1a,$keyword<\/li>\n<\/ul>"
          },
          {
            "name" : "format",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "RDS can return a variety of JSON objects to plug into various java script\ncharting libraries.<div><em>Valid Formats:<\/em><\/div>\n<ul>\n<li>amcharts<\/li>\n<li>gcharts<\/li>\n<li>mtna<\/li>\n<li>mtna_simple<\/li>\n<li>plotly_area<\/li>\n<li>plotly_bar<\/li>\n<li>plotly_boxplot<\/li>\n<li>plotly_bubble<\/li>\n<li>plotly_hist<\/li>\n<li>plotly_h_bar<\/li>\n<li>plotly_h_hist<\/li>\n<li>plotly_line<\/li>\n<li>plotly_pie<\/li>\n<li>plotly_scatter<\/li>\n<li>plotly_ts<\/li>\n<\/ul>"
          },
          {
            "name" : "groupby",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "When computing a new variable using a function that depends on\naggregation the group by parameter can specify which columns to group\nby.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>groupby=V1<\/li>\n<li>groupby=V1,V2<\/li>\n<\/ul>"
          },
          {
            "name" : "inject",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying if we want the values injected into the returned records."
          },
          {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The limit of records to return."
          },
          {
            "name" : "measure",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Columns to use as measures. Count is used by\ndefault.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>measure=count:Count(V1)<\/li>\n<li>measure=avg:AVG(V1)<\/li>\n<\/ul>"
          },
          {
            "name" : "metadata",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether metadata should be returned along side the data."
          },
          {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "number",
            "description" : "The record to start at."
          },
          {
            "name" : "orderby",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "Allows the data to be reordered in ascending or descending order by\ncolumn.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>orderby=V1 DESC<\/li>\n<li>orderby=V1 DESC,V2 ASC<\/li>\n<\/ul>"
          },
          {
            "name" : "totals",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : "Flag specifying whether subtotals should be returned along side the data."
          },
          {
            "name" : "weights",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : "The IDs of variables to use as weights in the resulting data."
          },
          {
            "name" : "where",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "The where parameter allows filters to be applied to the data that will be\nreturned. This follows a syntax similar to a SQL where\nclause.<div><em>Examples:<\/em><\/div>\n<ul>\n<li>where=V1=1<\/li>\n<li>where=V1=Bob<\/li>\n<li>where=V1!=1<\/li>\n<li>where=V1!=NULL<\/li>\n<li>where=V1&gt;=1<\/li>\n<li>where=V1&lt;=1<\/li>\n<li>where=V1&gt;1<\/li>\n<li>where=V1&lt;1<\/li>\n<li>where=V1 matches [0-9]+<\/li>\n<li>where=V1 like a%<\/li>\n<li>where=V1=1 AND V2=2<\/li>\n<li>where=(V1=1 AND V2=2) OR V3=3<\/li>\n<\/ul>"
          },
          {
            "name" : "catalogId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the catalog that contains the data product."
          },
          {
            "name" : "dataProductId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The ID of the data product to that the query relates to."
          },
          {
            "name" : "popular",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : "True / false if the query should be considered popular or not."
          }
        ],
        "responses" : {
          "404" : {
            "schema" : {
"$ref" : "#/definitions/json_ErrorMessage"
            },
            "description" : "Catalog, data product, or data source not found."
          },
          "200" : {
            "description" : "Query set as popular successfully."
          }
        }
      }
    }
  }
}
